#N canvas 382 84 642 439 10;
#X obj 59 33 bng 15 250 50 0 empty empty empty 0 -6 0 8 -262144 -1
-1;
#X obj 59 10 loadbang;
#N canvas 302 49 694 536 start_gripd 0;
#X obj 51 33 inlet;
#X msg 54 103 connect;
#X msg 69 138 disconnect;
#X text 122 454 Takes one optional argument to specify a port.;
#X text 151 130 Set gripd object to stop waiting for a connection.
;
#X text 152 143 Also closes gripd GUI opened by "open <filename>".
;
#X text 118 96 Set gripd object to wait for a connection (Not needed
with "open" message.);
#X floatatom 54 501 5 0 0 0 - - -;
#X msg 134 347 lock;
#X msg 144 378 unlock;
#X text 173 347 Set GUI to lock mode;
#X text 193 378 Set GUI to normal (editable) mode;
#X text 93 502 left outlet: 1 on connect \, 0 on disconnect;
#X floatatom 81 479 5 0 0 0 - - -;
#X text 119 480 right outlet: 1 when shown \, 0 when hidden;
#X msg 88 219 show;
#X msg 97 247 hide;
#X text 125 220 show GUI window when hidden;
#X text 135 246 hide GUI window when shown;
#X text 523 411 Path to directory containing gripd executable;
#X text 523 426 "../gripd" by default;
#X msg 108 280 openpanel;
#X msg 118 311 savepanel;
#X text 185 311 open a save file dialog and send file to savepanel
receive symbol;
#X text 181 274 open an open file dialog and send file to openpanel
receive symbol;
#X msg 142 407 set_path /DISKPATHTO/pd-extended_0.43.4-1/usr/lib/pd-extended/extra/gripd
;
#X obj 54 453 gripd 3490;
#X msg 463 134 open /DISKPATHTO/pd-extended_0.43.4-1/usr/lib/pd-extended/extra/gripd/examples/gripd.gpd
;
#X text 460 178 open_locked: Open gripd GUI in locked mode;
#X msg 80 166 open /DISKPATHTO/THISDIR/turntable_audioloop.gpd
;
#X obj 51 64 t b b;
#X text 97 33 initialization loadbang;
#X text 269 12 Note: there is pd-extended/extra/gripd/gripd.opt \,
with joystick = TRUE \, midi = TRUE (needs hacking for py 2.7);
#N canvas 284 49 718 415 startup_rotknob_ui 0;
#X obj 15 -17 inlet;
#X text 62 -20 initialization bang;
#X obj 15 6 bang;
#X obj 15 30 t b b;
#X msg 42 60 33;
#X obj 376 150 s rtextRPM0;
#X obj 376 65 r ssliderRPM0;
#X obj 123 119 s rsliderRPM0;
#X text 371 42 this runs continuously;
#X obj 67 22 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X text 201 -13 note: there is no trigger int in PD \, only t float
;
#X text 202 9 http://lists.puredata.info/pipermail/pd-list/2000-12/001611.html
;
#X text 200 -3 (`t i i` will give "bad type" \, but it will work);
#X obj 16 192 r sTogSpin0;
#X obj 16 243 sel True False;
#X obj 16 217 prepend symbol;
#X obj 27 331 s rTogSpin0;
#X msg 85 297 Stopped.;
#X msg 16 297 Running!;
#X text 13 168 this runs on click;
#X obj 230 335 sel True False;
#X obj 230 309 prepend symbol;
#X obj 230 284 r sTogAnim0;
#X obj 241 419 s rTogAnim0;
#X msg 230 386 Animating!;
#X msg 306 386 Not anim'd.;
#X msg 190 386 1;
#X msg 171 350 0;
#X obj 16 270 t b b b b;
#X msg 163 204 1;
#X obj 163 229 prepend runrotation;
#X obj 163 252 s rrotknobctrl0;
#X obj 87 270 t b b;
#X msg 197 204 0;
#X msg 370 214 1;
#X obj 370 262 s rrotknobctrl0;
#X msg 404 214 0;
#X obj 370 240 prepend runanimation;
#X text 25 385 the 0/1 here for btn state;
#X obj 230 359 t b b;
#X obj 306 360 t b b b b;
#X obj 42 90 t f f f f;
#X obj 208 119 prepend setdefaultrpm;
#X obj 209 141 prepend setrpm;
#X obj 224 164 s rrotknobctrl0;
#X obj 376 121 t f f;
#X obj 18 498 sel True False;
#X obj 18 472 prepend symbol;
#X obj 89 525 t b b;
#X obj 18 447 r sTogRevrs0;
#X obj 29 586 s rTogRevrs0;
#X obj 18 525 t b b;
#X msg 18 552 Reverse;
#X msg 87 551 Forward;
#X msg 172 522 -1;
#X msg 207 522 1;
#X floatatom 185 551 5 0 0 0 - - -;
#X obj 185 577 s revrs_spd;
#X obj 463 64 r revrs_spd;
#X obj 437 121 *;
#X obj 463 89 t b f;
#X text 538 63 (see revrs_spd below);
#X msg 134 471 False;
#X text 114 77 to ssliderRPM0 instead of rtextRPM0 \,;
#X text 114 87 to trigger the reverse calc too;
#X obj 42 119 s ssliderRPM0;
#X obj 66 -1 s rkinitbang;
#X obj 90 28 r rkinitbang;
#X obj 134 447 r rkinitbang;
#X text 211 448 instead of loadbang here;
#X obj 161 275 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 390 351 delay 500;
#X text 398 323 somehow \, I need at least 500 ms delay here \,;
#X text 399 332 else there is a trail of speed not exactly zero;
#X obj 143 792 s rimage0;
#X msg 189 686 fitb 1;
#X obj 137 624 r rkinitbang;
#X text 113 65 must trigger separately here \, send last;
#X obj 27 642 r wavfile;
#X obj 137 645 t b b;
#X text 23 626 store for later;
#X obj 27 667 prepend set;
#X msg 27 717 /DISKPATHTO/tmp/tt_seqintf_song1_93.wav;
#X obj 27 745 prepend rwav;
#X obj 78 693 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 413 620 r simage0;
#X obj 341 674 change;
#X obj 386 674 change;
#X obj 433 674 change;
#X obj 480 674 change;
#X obj 576 673 change;
#X floatatom 341 698 5 0 0 0 - - -;
#X floatatom 386 698 5 0 0 0 - - -;
#X floatatom 433 698 5 0 0 0 - - -;
#X floatatom 480 698 5 0 0 0 - - -;
#X floatatom 529 698 5 0 0 0 - - -;
#X floatatom 576 698 5 0 0 0 - - -;
#X text 338 715 x \, y (pixels);
#X text 431 715 btnstate;
#X obj 530 742 s scxrel0;
#X obj 482 725 t b f;
#X obj 366 770 expr if ($f1==0 && $f2==1 \, 1 \, 0);
#X obj 366 796 s scxclk0;
#X obj 304 750 loadbang;
#X msg 304 771 0;
#X text 301 734 must have \,;
#X text 301 787 to init;
#X text 301 795 calc later;
#X text 526 652 no \; change \; here;
#X obj 413 645 unpack f f f f f f f;
#X floatatom 644 697 5 0 0 0 - - -;
#X obj 644 673 nop;
#X text 527 714 hacked: xrel \, yrel \, xrelvel/f;
#X obj 644 738 s scxrf0;
#X connect 0 0 2 0;
#X connect 2 0 66 0;
#X connect 3 1 4 0;
#X connect 4 0 41 0;
#X connect 6 0 59 0;
#X connect 9 0 2 0;
#X connect 13 0 15 0;
#X connect 14 0 28 0;
#X connect 14 1 32 0;
#X connect 15 0 14 0;
#X connect 17 0 16 0;
#X connect 18 0 16 0;
#X connect 20 0 39 0;
#X connect 20 1 40 0;
#X connect 21 0 20 0;
#X connect 22 0 21 0;
#X connect 24 0 23 0;
#X connect 25 0 23 0;
#X connect 26 0 23 0;
#X connect 27 0 16 0;
#X connect 28 0 18 0;
#X connect 28 1 24 0;
#X connect 28 2 26 0;
#X connect 28 3 29 0;
#X connect 29 0 30 0;
#X connect 30 0 31 0;
#X connect 32 0 17 0;
#X connect 32 1 33 0;
#X connect 33 0 30 0;
#X connect 34 0 37 0;
#X connect 36 0 37 0;
#X connect 37 0 35 0;
#X connect 39 0 24 0;
#X connect 39 1 34 0;
#X connect 40 0 25 0;
#X connect 40 1 71 0;
#X connect 40 2 27 0;
#X connect 40 3 32 0;
#X connect 41 0 65 0;
#X connect 41 1 7 0;
#X connect 41 2 43 0;
#X connect 41 3 42 0;
#X connect 42 0 44 0;
#X connect 43 0 44 0;
#X connect 45 0 5 0;
#X connect 45 1 43 0;
#X connect 46 0 51 0;
#X connect 46 1 48 0;
#X connect 47 0 46 0;
#X connect 48 0 53 0;
#X connect 48 1 55 0;
#X connect 49 0 47 0;
#X connect 51 0 52 0;
#X connect 51 1 54 0;
#X connect 52 0 50 0;
#X connect 53 0 50 0;
#X connect 54 0 56 0;
#X connect 55 0 56 0;
#X connect 56 0 57 0;
#X connect 58 0 60 0;
#X connect 59 0 45 0;
#X connect 60 0 59 0;
#X connect 60 1 59 1;
#X connect 62 0 47 0;
#X connect 67 0 3 0;
#X connect 68 0 62 0;
#X connect 70 0 32 0;
#X connect 71 0 36 0;
#X connect 75 0 74 0;
#X connect 76 0 79 0;
#X connect 78 0 81 0;
#X connect 79 0 84 0;
#X connect 79 1 75 0;
#X connect 81 0 82 0;
#X connect 82 0 83 0;
#X connect 83 0 74 0;
#X connect 84 0 82 0;
#X connect 85 0 109 0;
#X connect 86 0 91 0;
#X connect 87 0 92 0;
#X connect 88 0 93 0;
#X connect 89 0 94 0;
#X connect 90 0 96 0;
#X connect 93 0 101 0;
#X connect 94 0 100 0;
#X connect 95 0 99 0;
#X connect 100 0 93 0;
#X connect 100 1 101 1;
#X connect 101 0 102 0;
#X connect 103 0 104 0;
#X connect 104 0 102 0;
#X connect 109 0 86 0;
#X connect 109 1 87 0;
#X connect 109 2 88 0;
#X connect 109 3 89 0;
#X connect 109 4 95 0;
#X connect 109 5 90 0;
#X connect 109 6 111 0;
#X connect 110 0 113 0;
#X connect 111 0 110 0;
#X restore 413 482 pd startup_rotknob_ui;
#X obj 280 42 inlet;
#X text 316 44 to pass show from outside;
#X connect 0 0 30 0;
#X connect 1 0 26 0;
#X connect 2 0 26 0;
#X connect 8 0 26 0;
#X connect 9 0 26 0;
#X connect 13 0 33 0;
#X connect 15 0 26 0;
#X connect 16 0 26 0;
#X connect 21 0 26 0;
#X connect 22 0 26 0;
#X connect 25 0 26 0;
#X connect 26 0 7 0;
#X connect 26 1 13 0;
#X connect 29 0 26 0;
#X connect 30 0 29 0;
#X connect 30 1 25 0;
#X connect 34 0 26 0;
#X restore 59 58 pd start_gripd;
#X obj 187 34 print rotknob;
#X floatatom 175 92 8 0 0 0 - - -;
#X floatatom 232 92 8 0 0 0 - - -;
#X obj 175 10 r srotknobctrl0;
#X obj 175 67 unpack f f;
#N canvas 63 75 862 466 audioloop 0;
#X obj 29 54 bng 15 250 50 0 empty empty empty 0 -6 0 8 -262144 -1
-1;
#X text 50 51 load sound;
#X obj 30 29 loadbang;
#X obj 30 217 soundfiler;
#X floatatom 67 244 12 0 0 0 - - -;
#N canvas 0 0 450 300 (subpatch) 0;
#X array array0L 192551 float 2;
#X coords 0 1 192551 -1 100 70 1 0 0;
#X restore 445 231 graph;
#X text 445 201 make sure it does not "Save Contents?";
#X text 174 172 make sure -resize \, else file is cropped to length
of array1;
#X text 174 161 for stereo: 'read -resize (\$1) channelL channelR'
;
#X obj 67 266 s sampleSize;
#X obj 30 300 expr 44100 / $f1;
#X floatatom 464 421 12 0 0 0 - - -;
#X obj 30 419 phasor~;
#X obj 31 465 *~;
#X obj 66 445 r sampleSize;
#X obj 345 624 vsl 30 60 0 1 0 0 empty empty empty 0 -9 0 10 -262144
-1 -1 0 1;
#X obj 33 691 *~;
#X obj 33 719 dac~ 1 2;
#X text 379 658 Volume Slider [vslider] from 0-1;
#X msg 118 389 0;
#X msg 155 389 0.5;
#X text 39 554 audio is here;
#X text 37 481 this is "position" (index into array) signal;
#X text 81 418 signal only from 0 to 1;
#X text 115 371 skip to start/half of file;
#X floatatom 156 346 12 0 0 0 - - -;
#X obj 283 613 inlet;
#X obj 476 516 *~;
#X obj 156 323 snapshot~;
#X obj 156 298 metro 50;
#X obj 156 276 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X obj 29 96 s wavfile;
#X obj 30 130 r wavfile;
#X obj 30 154 prepend list;
#X text 113 146 this `list` just to have the \$1 selector trigger;
#X obj 336 576 s rgauge0;
#X obj 336 534 snapshot~;
#X obj 325 464 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 1
1;
#X obj 346 463 loadbang;
#X text 333 589 gauge is discrete in 0 to 1 \,;
#X obj 336 555 * 332;
#X text 333 597 so multiply here (width pixels);
#X text 444 189 array needs to be "Put" separately \,;
#N canvas 0 0 450 300 (subpatch) 0;
#X array array0R 192551 float 2;
#X coords 0 1 192551 -1 100 70 1 0 0;
#X restore 445 316 graph;
#X obj 32 536 tabread4~ array0L;
#X obj 156 536 tabread4~ array0R;
#X obj 156 687 *~;
#X msg 29 74 /DISKPATHTO/tmp/tt_seqintf_song1_93.wav;
#X msg 30 189 read -resize \$1 array0L array0R;
#X obj 658 396 delta;
#X floatatom 658 452 9 0 0 0 - - -;
#X obj 658 499 vline~;
#X floatatom 658 366 9 0 0 0 - - -;
#X obj 336 508 t b b;
#X obj 544 466 r scxclk0;
#X obj 454 475 r~ rspd;
#X obj 529 568 *~;
#X floatatom 584 543 5 0 0 0 - - -;
#X floatatom 544 543 5 0 0 0 - - -;
#X obj 608 568 *~;
#X obj 573 596 +~;
#X text 486 443 spigot/gate/switch for;
#X text 486 453 scrub/rotate velo;
#X obj 574 622 s~ trspd;
#X obj 55 319 r~ trspd;
#X obj 285 334 prepend set;
#X msg 285 367 0.611446;
#X obj 285 290 r scxrel0;
#X obj 365 273 r scxclk0;
#X floatatom 285 387 5 0 0 0 - - -;
#X obj 365 314 sel 1;
#X obj 734 449 r scxrf0;
#X obj 733 495 sig~;
#X floatatom 769 513 9 0 0 0 - - -;
#X obj 734 471 nop;
#X msg 658 343 0.611446;
#X text 723 337 trick is \; must resample @40 ms \; here as well!;
#X obj 544 498 expr 1-$f1 \; $f1;
#X obj 630 395 -;
#X obj 379 378 delay 1;
#X obj 436 379 prepend set;
#X obj 365 293 t f b f;
#X msg 412 417 0;
#X obj 365 342 t b b b;
#X text 589 288 another trick - on left down \; make sure that this
part is banged twice \; to avoid jumps in the delta!;
#X obj 336 487 metro 40;
#X obj 658 429 / 0.04;
#X msg 658 477 \$1 40;
#X text 701 382 the subtract oscillates \; the delta is ok but late
a bit \; looks like its just PyGUI late;
#X text 325 405 prob don't \; need delayed \; bang to spigot anymore?
;
#N canvas 40 71 450 300 loose_avg 0;
#X obj 63 13 inlet;
#X obj 230 15 inlet;
#X text 101 12 bang out & reset;
#X text 269 15 numbers in;
#X obj 139 337 outlet;
#X text 187 338 averaged out;
#X obj 100 221 accum;
#X obj 207 248 counter;
#X obj 131 184 t f b;
#X floatatom 207 274 5 0 0 0 - - -;
#X text 115 203 add to current value / no output;
#X floatatom 100 246 5 0 0 0 - - -;
#X obj 143 299 /;
#X text 235 227 reset and output 0 imediately;
#X msg 46 135 bang;
#X text 75 136 output current value;
#X msg 25 113 set \$1;
#X floatatom 122 82 5 0 0 0 - - -;
#X text 76 111 reset current value / no output;
#X obj 20 237 prepend set;
#X msg 39 83 0.120736;
#X obj 63 43 t b b b b b;
#X floatatom 368 146 5 0 0 0 - - -;
#X obj 293 174 average 10;
#X text 404 148 number of items to average;
#X msg 365 111 weight;
#X text 424 112 weighted average (giving last;
#X text 425 128 items higher weight);
#X obj 365 71 loadbang;
#X msg 323 93 reset;
#X text 375 94 forget everything;
#X floatatom 336 202 5 0 0 0 - - -;
#X text 39 39 comment;
#X connect 0 0 21 0;
#X connect 1 0 8 0;
#X connect 1 0 23 0;
#X connect 6 0 11 0;
#X connect 7 0 9 0;
#X connect 7 0 22 0;
#X connect 8 0 6 1;
#X connect 8 1 7 0;
#X connect 9 0 12 1;
#X connect 11 0 12 0;
#X connect 12 0 19 0;
#X connect 14 0 6 0;
#X connect 16 0 6 0;
#X connect 17 0 16 0;
#X connect 19 0 20 0;
#X connect 20 0 16 0;
#X connect 21 0 7 0;
#X connect 21 1 7 3;
#X connect 21 2 20 0;
#X connect 21 2 29 0;
#X connect 21 3 17 0;
#X connect 21 4 14 0;
#X connect 22 0 23 1;
#X connect 23 0 31 0;
#X connect 25 0 23 0;
#X connect 28 0 25 0;
#X connect 29 0 23 0;
#X connect 31 0 4 0;
#X restore 635 675 pd loose_avg;
#X floatatom 635 702 9 0 0 0 - - -;
#X obj 704 649 r scxrel0;
#X obj 611 725 prepend set;
#X text 714 671 in loose_avg \, neither \; the `accum`/`counter` \;
nor the `average` one \; are as good as current \; scrubber algo...
;
#X connect 0 0 47 0;
#X connect 2 0 0 0;
#X connect 3 0 4 0;
#X connect 3 0 10 0;
#X connect 4 0 9 0;
#X connect 10 0 11 0;
#X connect 11 0 27 1;
#X connect 12 0 13 0;
#X connect 12 0 36 0;
#X connect 13 0 44 0;
#X connect 13 0 45 0;
#X connect 14 0 13 1;
#X connect 16 0 17 0;
#X connect 19 0 12 1;
#X connect 20 0 12 1;
#X connect 26 0 16 1;
#X connect 26 0 46 1;
#X connect 27 0 56 0;
#X connect 28 0 25 0;
#X connect 29 0 28 0;
#X connect 30 0 29 0;
#X connect 32 0 33 0;
#X connect 33 0 48 0;
#X connect 36 0 40 0;
#X connect 36 0 78 1;
#X connect 37 0 85 0;
#X connect 38 0 37 0;
#X connect 40 0 35 0;
#X connect 44 0 16 0;
#X connect 45 0 46 0;
#X connect 46 0 17 1;
#X connect 47 0 31 0;
#X connect 48 0 3 0;
#X connect 49 0 86 0;
#X connect 50 0 87 0;
#X connect 51 0 59 0;
#X connect 52 0 78 0;
#X connect 52 0 49 0;
#X connect 53 0 75 0;
#X connect 53 1 36 0;
#X connect 55 0 27 0;
#X connect 56 0 60 0;
#X connect 57 0 59 1;
#X connect 58 0 56 1;
#X connect 59 0 60 1;
#X connect 60 0 63 0;
#X connect 64 0 28 0;
#X connect 64 0 12 0;
#X connect 65 0 66 0;
#X connect 65 0 75 0;
#X connect 66 0 69 0;
#X connect 67 0 65 0;
#X connect 68 0 81 0;
#X connect 69 0 12 1;
#X connect 70 0 83 0;
#X connect 71 0 74 0;
#X connect 74 0 72 0;
#X connect 74 0 73 0;
#X connect 75 0 52 0;
#X connect 77 0 58 0;
#X connect 77 1 57 0;
#X connect 79 0 82 0;
#X connect 80 0 82 0;
#X connect 81 0 70 0;
#X connect 81 1 79 0;
#X connect 81 2 80 0;
#X connect 81 2 77 0;
#X connect 83 0 66 0;
#X connect 83 1 75 0;
#X connect 83 2 75 0;
#X connect 85 0 53 0;
#X connect 86 0 50 0;
#X connect 87 0 51 0;
#X connect 90 0 91 0;
#X connect 91 0 93 0;
#X restore 60 244 pd audioloop;
#X obj 367 256 scope~ 199 159 256 3 100 -10 10 0 0 0 0 102 255 51 135
135 135 0;
#X obj 314 167 sig~;
#X msg 491 190 bufsize 100;
#X obj 314 143 line 0 40;
#X msg 86 194 \; pd dsp \$1;
#X obj 59 197 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 1
1;
#X obj 160 164 vsl 30 60 0 1 0 0 empty empty empty 0 -9 0 10 -262144
-1 -1 5900 1;
#X obj 275 213 s~ rspd;
#X obj 232 143 vline~;
#X obj 491 140 loadbang;
#X obj 491 163 t b b;
#X msg 497 213 range -10 10;
#X msg 497 233 range -2 2;
#X msg 232 117 \$1 30;
#X obj 231 176 lop~ 20;
#X obj 59 139 loadbang;
#X obj 59 161 t b b;
#X msg 160 139 1;
#X obj 368 213 r~ trspd;
#X msg 123 34 show;
#X connect 0 0 2 0;
#X connect 1 0 0 0;
#X connect 5 0 22 0;
#X connect 6 0 7 0;
#X connect 7 0 4 0;
#X connect 7 1 5 0;
#X connect 11 0 9 0;
#X connect 12 0 10 0;
#X connect 14 0 13 0;
#X connect 15 0 8 0;
#X connect 17 0 23 0;
#X connect 18 0 19 0;
#X connect 19 0 11 0;
#X connect 19 1 20 0;
#X connect 20 0 9 0;
#X connect 21 0 9 0;
#X connect 22 0 12 0;
#X connect 22 0 17 0;
#X connect 23 0 16 0;
#X connect 24 0 25 0;
#X connect 25 0 14 0;
#X connect 25 1 26 0;
#X connect 26 0 15 0;
#X connect 27 0 9 0;
#X connect 28 0 2 1;
