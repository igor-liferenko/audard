#N canvas 456 49 568 519 10;
#X obj 14 122 bng 15 250 50 0 empty empty empty 0 -6 0 8 -262144 -1
-1;
#X obj 14 98 loadbang;
#N canvas 308 49 695 537 start_gripd 0;
#X obj 51 32 inlet;
#X msg 54 103 connect;
#X msg 69 138 disconnect;
#X text 122 454 Takes one optional argument to specify a port.;
#X text 151 130 Set gripd object to stop waiting for a connection.
;
#X text 152 143 Also closes gripd GUI opened by "open <filename>".
;
#X text 118 96 Set gripd object to wait for a connection (Not needed
with "open" message.);
#X floatatom 54 501 5 0 0 0 - - -;
#X msg 134 347 lock;
#X msg 144 378 unlock;
#X text 173 347 Set GUI to lock mode;
#X text 193 378 Set GUI to normal (editable) mode;
#X text 93 502 left outlet: 1 on connect \, 0 on disconnect;
#X floatatom 81 479 5 0 0 0 - - -;
#X text 119 480 right outlet: 1 when shown \, 0 when hidden;
#X msg 88 219 show;
#X msg 97 247 hide;
#X text 125 220 show GUI window when hidden;
#X text 135 246 hide GUI window when shown;
#X text 523 411 Path to directory containing gripd executable;
#X text 523 426 "../gripd" by default;
#X msg 108 280 openpanel;
#X msg 118 311 savepanel;
#X text 185 311 open a save file dialog and send file to savepanel
receive symbol;
#X text 181 274 open an open file dialog and send file to openpanel
receive symbol;
#X msg 142 407 set_path /DISKPATHTO/pd-extended_0.43.4-1/usr/lib/pd-extended/extra/gripd
;
#X obj 54 453 gripd 3490;
#X msg 463 134 open /DISKPATHTO/pd-extended_0.43.4-1/usr/lib/pd-extended/extra/gripd/examples/gripd.gpd
;
#X text 460 178 open_locked: Open gripd GUI in locked mode;
#X msg 80 166 open /DISKPATHTO/THISDIR/seqinterface.gpd
;
#X obj 51 64 t b b;
#X text 97 33 initialization loadbang;
#X text 269 12 Note: there is pd-extended/extra/gripd/gripd.opt \,
with joystick = TRUE \, midi = TRUE (needs hacking for py 2.7);
#N canvas 379 49 636 540 startup_seqintf_ui 0;
#X obj 16 15 inlet;
#X text 63 13 initialization bang;
#X obj 35 37 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X text 202 20 note: there is no trigger int in PD \, only t float
;
#X text 203 42 http://lists.puredata.info/pipermail/pd-list/2000-12/001611.html
;
#X text 201 30 (`t i i` will give "bad type" \, but it will work);
#X obj 16 60 s sqinitbang0;
#X obj 15 94 r sqinitbang0;
#X obj 366 279 s rknobcpln0;
#X msg 336 257 setvalue 93;
#X msg 355 235 settags 40 161 10;
#X msg 375 213 setangularrange -45 225;
#X msg 363 161 set setvalue \$1;
#X msg 363 120 93;
#X text 390 118 default BPM;
#X obj 301 188 t b b b;
#X obj 298 333 s rlednum0;
#X msg 298 309 setvalue 93;
#X obj 145 345 s rcombobox0;
#X msg 149 220 setvalue;
#X msg 138 242 clear;
#X text 175 241 erase choices;
#X msg 92 318 setselection 0;
#X obj 70 193 t b b b b b;
#X text 183 318 (also w/out arg);
#X obj 15 334 s rTbPat0;
#X obj 15 117 t b b b b b;
#X text 43 300 dflt \; pattern;
#X msg 15 309 1;
#X obj 15 553 prepend setvalue;
#X obj 15 578 s rlednum0;
#X obj 15 427 r sknobcpln0;
#X floatatom 15 448 5 0 0 0 - - -;
#X text 52 447 BPM from knob;
#X floatatom 118 529 5 0 0 0 - - -;
#X obj 42 497 expr 1000*15/$f1;
#X text 44 513 16th note duration [msecs];
#X obj 42 529 s n16thDur0;
#X obj 15 474 t f f;
#X text 13 398 this runs "continuously";
#X text 12 409 (get BPM from rotary knob);
#X obj 245 481 sel True False;
#X obj 245 455 prepend symbol;
#X msg 314 535 Stopped.;
#X msg 245 535 Running!;
#X text 242 406 this runs on click;
#X obj 245 508 t b b b b;
#X obj 316 508 t b b;
#X obj 245 430 r sTogRunSq0;
#X obj 256 569 s rTogRunSq0;
#X obj 445 518 r scombobox0;
#X obj 445 559 prepend set;
#X obj 445 410 r sSpinPat0;
#X obj 445 455 prepend set;
#X msg 445 582 cbchange Song_2 1;
#X msg 445 478 1;
#X obj 476 478 s rTbPat0;
#X obj 16 614 r sseqintf0;
#X obj 16 638 route radsetstep;
#X floatatom 86 670 5 0 0 0 - - -;
#X text 20 652 step set by radiobtns;
#X obj 16 670 s radstep0;
#X obj 363 139 t f f;
#X text 204 198 erase dflt text \; (combobox \, \; not choice);
#X text 146 358 keep the name \; even if Choice now;
#X text 121 256 append idx as extra_data;
#X msg 123 274 append Song_1 0;
#X msg 106 295 append Song_2 1;
#X obj 445 539 t b a;
#X msg 445 603 \$2;
#X obj 498 672 s sngnum0;
#X obj 445 433 t f f f;
#X obj 539 454 - 1;
#X obj 539 525 s patnum0;
#X obj 445 669 t f f;
#X obj 472 693 s rSpinPat0;
#X obj 445 716 s sSpinPat0;
#X text 495 616 reset to first patrn \; each time a song chosen;
#X obj 539 478 t f f;
#X obj 566 503 v patnm0;
#X obj 517 650 v sngnm0;
#X obj 357 580 r sqinitbang0;
#X obj 445 626 t b f f;
#X msg 357 602 0;
#X msg 445 648 1;
#X text 326 643 the spin is 1 to 2 \; so set to 1 here;
#X text 311 616 the choice is 0-based;
#X connect 0 0 2 0;
#X connect 2 0 6 0;
#X connect 7 0 26 0;
#X connect 9 0 8 0;
#X connect 10 0 8 0;
#X connect 11 0 8 0;
#X connect 12 0 9 0;
#X connect 12 0 17 0;
#X connect 13 0 62 0;
#X connect 15 0 9 0;
#X connect 15 1 10 0;
#X connect 15 2 11 0;
#X connect 17 0 16 0;
#X connect 19 0 18 0;
#X connect 20 0 18 0;
#X connect 22 0 18 0;
#X connect 23 0 22 0;
#X connect 23 1 67 0;
#X connect 23 2 66 0;
#X connect 23 3 20 0;
#X connect 26 0 28 0;
#X connect 26 1 23 0;
#X connect 26 2 17 0;
#X connect 26 3 15 0;
#X connect 26 4 13 0;
#X connect 28 0 25 0;
#X connect 29 0 30 0;
#X connect 31 0 32 0;
#X connect 32 0 38 0;
#X connect 35 0 34 0;
#X connect 35 0 37 0;
#X connect 38 0 29 0;
#X connect 38 1 35 0;
#X connect 41 0 46 0;
#X connect 41 1 47 0;
#X connect 42 0 41 0;
#X connect 43 0 49 0;
#X connect 44 0 49 0;
#X connect 46 0 44 0;
#X connect 47 0 43 0;
#X connect 48 0 42 0;
#X connect 50 0 68 0;
#X connect 51 0 54 0;
#X connect 52 0 71 0;
#X connect 53 0 55 0;
#X connect 54 0 69 0;
#X connect 57 0 58 0;
#X connect 58 0 59 0;
#X connect 58 0 61 0;
#X connect 62 0 12 0;
#X connect 62 1 35 0;
#X connect 66 0 18 0;
#X connect 67 0 18 0;
#X connect 68 0 54 0;
#X connect 68 1 51 0;
#X connect 69 0 82 0;
#X connect 71 0 53 0;
#X connect 71 1 56 0;
#X connect 71 2 72 0;
#X connect 72 0 78 0;
#X connect 74 0 76 0;
#X connect 74 1 75 0;
#X connect 78 0 73 0;
#X connect 78 1 79 0;
#X connect 81 0 83 0;
#X connect 82 0 84 0;
#X connect 82 1 70 0;
#X connect 82 2 80 0;
#X connect 83 0 82 0;
#X connect 84 0 74 0;
#X restore 428 502 pd startup_seqintf_ui;
#X obj 428 460 sel 1;
#X text 467 459 bang if value ==1;
#X obj 428 481 t b b;
#X obj 280 42 inlet;
#X text 316 44 to pass show from outside;
#X connect 0 0 30 0;
#X connect 1 0 26 0;
#X connect 2 0 26 0;
#X connect 8 0 26 0;
#X connect 9 0 26 0;
#X connect 13 0 34 0;
#X connect 15 0 26 0;
#X connect 16 0 26 0;
#X connect 21 0 26 0;
#X connect 22 0 26 0;
#X connect 25 0 26 0;
#X connect 26 0 7 0;
#X connect 26 1 13 0;
#X connect 29 0 26 0;
#X connect 30 0 29 0;
#X connect 30 1 25 0;
#X connect 34 0 36 0;
#X connect 36 0 33 0;
#X restore 14 147 pd start_gripd;
#X obj 329 461 s rseqintf0;
#X obj 329 438 prepend setstep;
#X floatatom 451 296 5 0 0 0 - - -;
#X obj 279 253 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 1
1;
#X obj 451 276 count 16;
#X text 507 274 modulo counter;
#X obj 279 275 metro 100;
#X text 257 112 quarter note at 60 BPM lasts 1 sec = 60/BPM \; metro
needs to drive at sixteenth notes \; so \, at duration 15/BPM;
#X obj 258 160 r sTogRunSq0;
#X obj 258 204 sel True False;
#X msg 258 226 1;
#X msg 298 225 0;
#X obj 258 183 prepend list;
#X obj 330 249 r n16thDur0;
#X obj 300 298 r radstep0;
#X obj 279 374 counter 0 15;
#X msg 300 342 jam \$1;
#X floatatom 310 321 5 0 0 0 - - -;
#X text 348 334 set counter to nr. and \; output immediately;
#X text 448 244 cannot use count: is too simple \; and cannot "jam"
a value instantly;
#X text 11 5 NB:only PD abstractions have args \, one-off subpatches
don't!;
#N canvas 329 88 695 537 GetFileListing 0;
#X msg 101 30 /DISKPATHTO/smp;
#X obj 171 152 zexy/list2symbol /;
#X obj 171 173 route symbol;
#X symbolatom 171 195 25 0 0 0 - - -;
#X text 288 149 prints: symbol ...;
#X text 250 172 prints: symbol ...;
#X text 326 193 prints: symbol ...;
#X obj 171 216 prepend ls;
#X text 239 215 removes the "symbol"!;
#X text 221 29 choice of directory with *.wav samples;
#X obj 61 378 ggee/shell;
#X obj 91 409 print DONE;
#X obj 71 430 print STDOUT;
#X obj 171 131 list append *.wav;
#X text 435 51 Note: this needs a patched/fixed `shell` \, which might
(though shouldn't) generate "warning: -1 removed from poll list but
not found" - but otherwise \, DONE should trigger (regardless if DONE
is 0 \, or other exit status)! Also \, the `shell` will again block
\, if the command exits with error for some reason!;
#X obj 61 316 prepend cd;
#X obj 61 292 list append && ls *.wav;
#X text 209 288 first append \; then prepend \; so the "list" \; after
the prepend \; is removed;
#X obj 171 238 print CMDA;
#X obj 141 349 print CMDB;
#X text 169 111 (code to get full pathnames list):;
#X text 64 274 (code to get pnly basenames list):;
#X text 66 261 NOTE: cannot use semicolons in here! use && for shell
cmds!;
#X obj 61 88 t s b;
#X obj 81 67 prepend symbol;
#X obj 88 132 s clrmenu;
#X obj 61 30 inlet;
#X obj 258 425 key;
#N canvas 446 170 450 300 filedropdown 0;
#X obj 119 23 inlet;
#X obj 168 206 outlet;
#X obj 30 206 outlet;
#X obj 30 154 tof/pmenu 1 1 black white red;
#X obj 40 176 print index;
#X obj 126 176 print value;
#X msg 30 101 add \$1;
#X msg 81 125 clear;
#X obj 147 102 key;
#X obj 147 128 sel 65;
#X text 193 128 <- Shift+A will open the menu;
#X text 175 94 You can assign any key to pop the menu (Shift+A) in
this case.;
#X obj 30 78 prepend symbol;
#X text 124 73 must prepend whatever to have the next \$1 work;
#X obj 81 102 r clrmenu;
#X obj 30 57 r audfiles;
#X text 155 23 just for the key selection;
#X connect 0 0 3 0;
#X connect 3 0 2 0;
#X connect 3 1 1 0;
#X connect 6 0 3 0;
#X connect 7 0 3 0;
#X connect 8 0 9 0;
#X connect 12 0 6 0;
#X connect 14 0 7 0;
#X connect 15 0 12 0;
#X restore 258 450 pd filedropdown;
#X obj 291 425 sel 80;
#X text 333 425 P;
#X text 255 378 entire patch reacts to the [key] \; regardless which
subpatch is open \; and even if we want to type (and not to choose)
;
#X obj 61 450 s audfiles;
#X text 171 59 must prepend symbol for trigger \; now done above;
#X connect 1 0 2 0;
#X connect 2 0 3 0;
#X connect 3 0 7 0;
#X connect 7 0 18 0;
#X connect 10 0 12 0;
#X connect 10 0 32 0;
#X connect 10 1 11 0;
#X connect 13 0 1 0;
#X connect 15 0 19 0;
#X connect 15 0 10 0;
#X connect 16 0 15 0;
#X connect 23 0 13 0;
#X connect 23 0 16 0;
#X connect 23 1 25 0;
#X connect 26 0 23 0;
#X connect 27 0 29 0;
#X connect 29 0 28 0;
#X restore 14 302 pd GetFileListing;
#X msg 14 214 /DISKPATHTO/smp;
#X text 11 183 choice of directory \; with *.wav samples;
#X obj 14 256 s audiodir;
#X obj 14 281 r audiodir;
#N canvas 419 223 811 433 AudioSamples 0;
#X obj 30 22 r audiodir;
#X msg 111 281 crsh_03.wav;
#X obj 30 44 prepend set;
#X msg 30 87 /DISKPATHTO/smp;
#N canvas 0 49 450 300 (subpatch) 0;
#X array snd1-1-1L 229548 float 2;
#X coords 0 1 229548 -1 100 70 1 0 0;
#X restore 331 142 graph;
#X text 231 53 make sure it does not "Save Contents?";
#X text 229 23 make sure -resize \, else file is cropped to length
of array1;
#X text 229 12 for stereo: 'read -resize (\$1) channelL channelR';
#X text 230 40 array needs to be "Put" separately \,;
#N canvas 0 0 450 300 (subpatch) 0;
#X array snd1-1-1R 229548 float 2;
#X coords 0 1 229548 -1 100 70 1 0 0;
#X restore 444 142 graph;
#N canvas 0 49 450 300 (subpatch) 0;
#X array snd1-1-2L 198339 float 2;
#X coords 0 1 198339 -1 100 70 1 0 0;
#X restore 559 143 graph;
#N canvas 0 0 450 300 (subpatch) 0;
#X array snd1-1-2R 198339 float 2;
#X coords 0 1 198339 -1 100 70 1 0 0;
#X restore 672 142 graph;
#X text 330 109 ids: Song-Track-Notenum (or Song-Channel-Track);
#N canvas 0 49 450 300 (subpatch) 0;
#X array snd1-1-3L 33063 float 2;
#X coords 0 1 33063 -1 100 70 1 0 0;
#X restore 331 232 graph;
#N canvas 0 0 450 300 (subpatch) 0;
#X array snd1-1-3R 33063 float 2;
#X coords 0 1 33063 -1 100 70 1 0 0;
#X restore 444 232 graph;
#N canvas 0 49 450 300 (subpatch) 0;
#X array snd1-1-4L 48724 float 2;
#X coords 0 1 48724 -1 100 70 1 0 0;
#X restore 559 233 graph;
#N canvas 0 0 450 300 (subpatch) 0;
#X array snd1-1-4R 48724 float 2;
#X coords 0 1 48724 -1 100 70 1 0 0;
#X restore 672 232 graph;
#N canvas 0 49 450 300 (subpatch) 0;
#X array snd1-1-5L 22121 float 2;
#X coords 0 1 22121 -1 100 70 1 0 0;
#X restore 331 322 graph;
#N canvas 0 0 450 300 (subpatch) 0;
#X array snd1-1-5R 22121 float 2;
#X coords 0 1 22121 -1 100 70 1 0 0;
#X restore 444 322 graph;
#X obj 31 356 zexy/list2symbol /;
#X obj 41 287 r audiodir;
#X obj 31 309 pack s s;
#X msg 31 330 \$2 \$1;
#X text 108 298 reverse args \; [t b s] would still \; cause a trig
\, when \; audiodir first comes in!;
#X obj 31 416 soundfiler;
#X floatatom 68 443 12 0 0 0 - - -;
#X obj 31 487 expr 1000*$f1/44100;
#X floatatom 59 509 12 0 0 0 - - -;
#X msg 31 389 read -resize \$1 snd1-1-1L snd1-1-1R;
#X text 148 353 prints: symbol ... \; (good for \$1 below!);
#X obj 68 466 s ssz1-1-1;
#X obj 59 533 s len1-1-1;
#X msg 111 642 cymb_02.wav;
#X obj 31 691 zexy/list2symbol /;
#X obj 41 622 r audiodir;
#X obj 31 644 pack s s;
#X msg 31 665 \$2 \$1;
#X obj 31 751 soundfiler;
#X floatatom 68 778 12 0 0 0 - - -;
#X obj 31 834 expr 1000*$f1/44100;
#X floatatom 59 856 12 0 0 0 - - -;
#X msg 31 724 read -resize \$1 snd1-1-2L snd1-1-2R;
#X obj 68 801 s ssz1-1-2;
#X obj 59 880 s len1-1-2;
#X obj 261 751 soundfiler;
#X floatatom 298 778 12 0 0 0 - - -;
#X obj 261 834 expr 1000*$f1/44100;
#X floatatom 289 856 12 0 0 0 - - -;
#X msg 261 724 read -resize \$1 snd1-1-3L snd1-1-3R;
#X obj 298 801 s ssz1-1-3;
#X obj 289 880 s len1-1-3;
#X msg 571 645 snar_03.wav;
#X obj 491 691 zexy/list2symbol /;
#X obj 501 622 r audiodir;
#X obj 491 644 pack s s;
#X msg 491 665 \$2 \$1;
#X obj 491 751 soundfiler;
#X floatatom 528 778 12 0 0 0 - - -;
#X obj 491 834 expr 1000*$f1/44100;
#X floatatom 519 856 12 0 0 0 - - -;
#X msg 491 724 read -resize \$1 snd1-1-4L snd1-1-4R;
#X obj 528 801 s ssz1-1-4;
#X obj 519 880 s len1-1-4;
#X obj 721 691 zexy/list2symbol /;
#X obj 731 622 r audiodir;
#X obj 721 644 pack s s;
#X msg 721 665 \$2 \$1;
#X obj 721 751 soundfiler;
#X floatatom 758 778 12 0 0 0 - - -;
#X obj 721 834 expr 1000*$f1/44100;
#X floatatom 749 856 12 0 0 0 - - -;
#X msg 721 724 read -resize \$1 snd1-1-5L snd1-1-5R;
#X obj 749 880 s len1-1-5;
#X obj 205 129 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 30 65 t a b;
#N canvas 0 49 450 300 (subpatch) 0;
#X array snd1-2-1L 243773 float 2;
#X coords 0 1 243773 -1 100 70 1 0 0;
#X restore 561 322 graph;
#N canvas 0 0 450 300 (subpatch) 0;
#X array snd1-2-1R 243773 float 2;
#X coords 0 1 243773 -1 100 70 1 0 0;
#X restore 674 322 graph;
#X msg 1031 645 bass_02.wav;
#X obj 951 691 zexy/list2symbol /;
#X obj 961 622 r audiodir;
#X obj 951 644 pack s s;
#X msg 951 665 \$2 \$1;
#X obj 951 751 soundfiler;
#X floatatom 988 778 12 0 0 0 - - -;
#X obj 951 834 expr 1000*$f1/44100;
#X floatatom 979 856 12 0 0 0 - - -;
#X msg 951 724 read -resize \$1 snd1-2-1L snd1-2-1R;
#X text 152 475 44100 / $f1 is frequency (for phasor~) \; $f1 / 44100
is time period (for vline~) \; actually 1000*$f1/44100 [ms] fr vline~!
;
#X obj 758 801 s ssz1-1-5;
#X obj 988 801 s ssz1-2-1;
#X obj 979 880 s len1-2-1;
#X obj 228 129 delay 100;
#N canvas 342 154 676 377 sampleMenuManager 0;
#X obj 308 318 t b a;
#X obj 326 339 t b a;
#X floatatom 540 451 5 0 0 0 - - -;
#X text 446 776 now this triggers all fields - should \; prob use [change]
when setting indiv \, \; settings later!;
#X obj 427 451 prepend set list;
#X obj 576 451 t b f f;
#X msg 450 707 list symbol crsh_03.wav cymb_02.wav mrmb_01.wav snar_03.wav
kick_06.wav bass_02.wav;
#X text 460 691 current list;
#X obj 469 646 t b a;
#X obj 471 670 prepend set list;
#X obj 427 427 t b a;
#X text 817 697 (this does not print pck when \; clicked - but \, chc1/2
update \; which is what matters);
#X text 185 366 leftmost s in [pack] \; is isolated hot inlet;
#X obj 491 86 inlet;
#X obj 541 86 inlet;
#X text 488 41 this just to initiate the state at loadbang - they should
not interfere with the rest. putting them as inlets to emphasize feedback
- and to allow extern naming;
#X text 8 2 6 samples' bank menu manager;
#X obj 591 86 inlet;
#X obj 641 86 inlet;
#X obj 691 86 inlet;
#X obj 741 86 inlet;
#X obj 318 378 pack s s s s s s s;
#X obj 343 318 t b a;
#X obj 361 339 t b a;
#X obj 378 318 t b a;
#X obj 396 339 t b a;
#X obj 540 427 r sngnum0;
#X obj 427 500 demux 1 2;
#X obj 564 500 demux 1 2;
#X text 371 527 sample bank \; song 1;
#X text 461 575 sample bank \; song 2;
#X obj 318 797 unpack s s s s s s s;
#X obj 326 834 outlet;
#X obj 376 834 outlet;
#X obj 426 834 outlet;
#X obj 476 834 outlet;
#X obj 526 834 outlet;
#X obj 576 834 outlet;
#X obj 251 104 key;
#X text 8 12 moving the pmenus here \, as they need \; to interact
with the engine;
#X obj 145 185 tof/pmenu 1 1 black white red;
#X obj 155 205 tof/pmenu 1 1 black white red;
#X obj 165 225 tof/pmenu 1 1 black white red;
#X obj 175 245 tof/pmenu 1 1 black white red;
#X obj 185 265 tof/pmenu 1 1 black white red;
#X obj 195 285 tof/pmenu 1 1 black white red;
#X msg 134 120 add \$1;
#X msg 185 121 clear;
#X obj 185 98 r clrmenu;
#X obj 134 76 r audfiles;
#X obj 134 150 t a a a a a a;
#X obj 134 97 symbol;
#X obj 251 127 sel 65 83 68 70 71 72;
#X text 294 112 A S D F G H;
#X text 251 76 A -> 1.1 | S -> 1.2 | D -> 1.3 \; F -> 1.4 | G -> 1.5
| H -> 2.*;
#X obj 491 163 symbol;
#X obj 541 163 symbol;
#X obj 591 163 symbol;
#X obj 641 163 symbol;
#X obj 691 163 symbol;
#X obj 741 163 symbol;
#X obj 491 108 t a a;
#X obj 541 108 t a a;
#X obj 591 108 t a a;
#X obj 641 109 t a a;
#X obj 691 108 t a a;
#X obj 741 108 t a a;
#N canvas 112 363 508 106 prepsetSix 0;
#X obj 21 16 inlet;
#X obj 101 16 inlet;
#X obj 181 16 inlet;
#X obj 261 15 inlet;
#X obj 341 15 inlet;
#X obj 421 15 inlet;
#X obj 21 38 prepend set;
#X obj 101 38 prepend set;
#X obj 181 38 prepend set;
#X obj 261 38 prepend set;
#X obj 341 37 prepend set;
#X obj 421 37 prepend set;
#X obj 21 66 outlet;
#X obj 101 67 outlet;
#X obj 181 66 outlet;
#X obj 261 65 outlet;
#X obj 341 65 outlet;
#X obj 421 65 outlet;
#X connect 0 0 6 0;
#X connect 1 0 7 0;
#X connect 2 0 8 0;
#X connect 3 0 9 0;
#X connect 4 0 10 0;
#X connect 5 0 11 0;
#X connect 6 0 12 0;
#X connect 7 0 13 0;
#X connect 8 0 14 0;
#X connect 9 0 15 0;
#X connect 10 0 16 0;
#X connect 11 0 17 0;
#X restore 390 153 pd prepsetSix;
#X msg 712 491 cymb_06.wav hhat_02.wav clap_03.wav snar_04.wav kick_01.wav
orch_01.wav;
#X msg 411 543 list symbol cymb_06.wav hhat_03.wav clap_03.wav snar_05.wav
kick_01.wav orch_01.wav;
#X msg 502 592 list symbol crsh_03.wav cymb_02.wav mrmb_01.wav snar_03.wav
kick_06.wav bass_02.wav;
#X text 486 183 Somehow \, now the send/receive vars have "symbol"
prepended automatically - probably because I now use [symbol] instead
of [prepend symbol] - which is lucky in this case \, because at the
samplers \, I can now use [nchange s] directly (without [prepend symbol]
\, as previously in the test file);
#X connect 0 0 21 0;
#X connect 0 1 21 1;
#X connect 1 0 21 0;
#X connect 1 1 21 2;
#X connect 2 0 5 0;
#X connect 4 0 27 0;
#X connect 5 0 28 0;
#X connect 5 1 27 1;
#X connect 5 2 28 1;
#X connect 6 0 31 0;
#X connect 8 0 6 0;
#X connect 8 1 9 0;
#X connect 9 0 6 0;
#X connect 10 0 28 0;
#X connect 10 1 4 0;
#X connect 13 0 61 0;
#X connect 14 0 62 0;
#X connect 17 0 63 0;
#X connect 18 0 64 0;
#X connect 19 0 65 0;
#X connect 20 0 66 0;
#X connect 21 0 10 0;
#X connect 21 0 31 0;
#X connect 22 0 21 0;
#X connect 22 1 21 3;
#X connect 23 0 21 0;
#X connect 23 1 21 4;
#X connect 24 0 21 0;
#X connect 24 1 21 5;
#X connect 25 0 21 0;
#X connect 25 1 21 6;
#X connect 26 0 2 0;
#X connect 27 0 69 0;
#X connect 27 1 70 0;
#X connect 28 0 69 0;
#X connect 28 1 70 0;
#X connect 31 1 32 0;
#X connect 31 2 33 0;
#X connect 31 3 34 0;
#X connect 31 4 35 0;
#X connect 31 5 36 0;
#X connect 31 6 37 0;
#X connect 38 0 52 0;
#X connect 40 1 0 0;
#X connect 41 1 1 0;
#X connect 42 1 22 0;
#X connect 43 1 23 0;
#X connect 44 1 24 0;
#X connect 45 1 25 0;
#X connect 46 0 50 0;
#X connect 47 0 50 0;
#X connect 48 0 47 0;
#X connect 49 0 51 0;
#X connect 50 0 40 0;
#X connect 50 1 41 0;
#X connect 50 2 42 0;
#X connect 50 3 43 0;
#X connect 50 4 44 0;
#X connect 50 5 45 0;
#X connect 51 0 46 0;
#X connect 52 0 40 0;
#X connect 52 1 41 0;
#X connect 52 2 42 0;
#X connect 52 3 43 0;
#X connect 52 4 44 0;
#X connect 52 5 45 0;
#X connect 55 0 21 1;
#X connect 56 0 21 2;
#X connect 57 0 21 3;
#X connect 58 0 21 4;
#X connect 59 0 21 5;
#X connect 60 0 21 6;
#X connect 61 0 55 0;
#X connect 61 1 67 0;
#X connect 62 0 56 0;
#X connect 62 1 67 1;
#X connect 63 0 57 0;
#X connect 63 1 67 2;
#X connect 64 0 58 0;
#X connect 64 1 67 3;
#X connect 65 0 59 0;
#X connect 65 1 67 4;
#X connect 66 0 60 0;
#X connect 66 1 67 5;
#X connect 67 0 40 0;
#X connect 67 1 41 0;
#X connect 67 2 42 0;
#X connect 67 3 43 0;
#X connect 67 4 44 0;
#X connect 67 5 45 0;
#X connect 69 0 8 0;
#X connect 70 0 8 0;
#X restore 470 479 pd sampleMenuManager;
#X msg 801 645 kick_06.wav;
#X obj 470 504 s chc110;
#X obj 493 524 s chc120;
#X obj 516 544 s chc130;
#X obj 540 504 s chc140;
#X obj 563 524 s chc150;
#X obj 587 544 s chc210;
#X obj 470 414 r chc110;
#X obj 493 434 r chc120;
#X obj 516 454 r chc130;
#X obj 540 414 r chc140;
#X obj 563 434 r chc150;
#X obj 587 454 r chc210;
#X obj 205 152 t b;
#X msg 205 172 0;
#X obj 205 193 s sngnum0;
#X text 23 150 sngnum is set on sqinitbang \; so later than these 100
ms \; so no need to init on \; loadbang here \, keep to remind;
#X msg 341 645 mrmb_01.wav;
#X obj 261 691 zexy/list2symbol /;
#X obj 271 622 r audiodir;
#X obj 261 644 pack s s;
#X msg 261 665 \$2 \$1;
#X obj 111 620 prepend set;
#X obj 341 622 prepend set;
#X obj 571 622 prepend set;
#X obj 801 622 prepend set;
#X obj 1031 622 prepend set;
#X obj 111 258 prepend set;
#X obj 31 580 r chc120;
#X obj 491 580 r chc140;
#X obj 721 580 r chc150;
#X obj 951 580 r chc210;
#X obj 261 580 r chc130;
#X obj 31 600 nchange s;
#X obj 261 600 nchange s;
#X obj 491 600 nchange s;
#X obj 721 600 nchange s;
#X obj 951 600 nchange s;
#X obj 31 247 r chc110;
#X obj 31 267 nchange s;
#X connect 0 0 2 0;
#X connect 2 0 74 0;
#X connect 19 0 28 0;
#X connect 20 0 21 1;
#X connect 21 0 22 0;
#X connect 22 0 19 0;
#X connect 24 0 25 0;
#X connect 24 0 26 0;
#X connect 25 0 30 0;
#X connect 26 0 27 0;
#X connect 27 0 31 0;
#X connect 28 0 24 0;
#X connect 33 0 41 0;
#X connect 34 0 35 1;
#X connect 35 0 36 0;
#X connect 36 0 33 0;
#X connect 37 0 38 0;
#X connect 37 0 39 0;
#X connect 38 0 42 0;
#X connect 39 0 40 0;
#X connect 40 0 43 0;
#X connect 41 0 37 0;
#X connect 44 0 45 0;
#X connect 44 0 46 0;
#X connect 45 0 49 0;
#X connect 46 0 47 0;
#X connect 47 0 50 0;
#X connect 48 0 44 0;
#X connect 52 0 60 0;
#X connect 53 0 54 1;
#X connect 54 0 55 0;
#X connect 55 0 52 0;
#X connect 56 0 57 0;
#X connect 56 0 58 0;
#X connect 57 0 61 0;
#X connect 58 0 59 0;
#X connect 59 0 62 0;
#X connect 60 0 56 0;
#X connect 63 0 71 0;
#X connect 64 0 65 1;
#X connect 65 0 66 0;
#X connect 66 0 63 0;
#X connect 67 0 68 0;
#X connect 67 0 69 0;
#X connect 68 0 88 0;
#X connect 69 0 70 0;
#X connect 70 0 72 0;
#X connect 71 0 67 0;
#X connect 73 0 91 0;
#X connect 74 0 3 0;
#X connect 74 1 73 0;
#X connect 78 0 86 0;
#X connect 79 0 80 1;
#X connect 80 0 81 0;
#X connect 81 0 78 0;
#X connect 82 0 83 0;
#X connect 82 0 84 0;
#X connect 83 0 89 0;
#X connect 84 0 85 0;
#X connect 85 0 90 0;
#X connect 86 0 82 0;
#X connect 91 0 106 0;
#X connect 92 0 94 0;
#X connect 92 1 95 0;
#X connect 92 2 96 0;
#X connect 92 3 97 0;
#X connect 92 4 98 0;
#X connect 92 5 99 0;
#X connect 100 0 92 0;
#X connect 101 0 92 1;
#X connect 102 0 92 2;
#X connect 103 0 92 3;
#X connect 104 0 92 4;
#X connect 105 0 92 5;
#X connect 106 0 107 0;
#X connect 111 0 48 0;
#X connect 112 0 113 1;
#X connect 113 0 114 0;
#X connect 114 0 111 0;
#X connect 115 0 32 0;
#X connect 116 0 110 0;
#X connect 117 0 51 0;
#X connect 118 0 93 0;
#X connect 119 0 77 0;
#X connect 120 0 1 0;
#X connect 121 0 126 0;
#X connect 122 0 128 0;
#X connect 123 0 129 0;
#X connect 124 0 130 0;
#X connect 125 0 127 0;
#X connect 126 0 35 0;
#X connect 126 0 115 0;
#X connect 127 0 113 0;
#X connect 127 0 116 0;
#X connect 128 0 54 0;
#X connect 128 0 117 0;
#X connect 129 0 65 0;
#X connect 129 0 118 0;
#X connect 130 0 80 0;
#X connect 130 0 119 0;
#X connect 131 0 132 0;
#X connect 132 0 21 0;
#X connect 132 0 120 0;
#X restore 14 346 pd AudioSamples;
#X obj 14 235 prepend symbol;
#N canvas 507 122 790 421 AudioSequences 0;
#X obj 29 67 table 1-1-1-vseq 16;
#X text 327 25 Unfortunately there's no way to set vertical range \,
etc.;
#X text 327 16 Note for table: the range is -1 to 1 (float) - and:
;
#X text 27 15 vseq: velocity/trigger sequence;
#X msg 335 239 0 0.7 0.6 0.5 0.4 0.3 0.2 0.1 0 0.1 0.2 0.3 0.4 0.5
0.6 0.7 0.8;
#X text 28 26 pseq: pitch sequence (only Tr/Ch 2);
#X obj 29 88 table 1-1-2-vseq 16;
#X obj 29 109 table 1-1-3-vseq 16;
#X obj 29 130 table 1-1-4-vseq 16;
#X obj 29 151 table 1-1-5-vseq 16;
#X obj 29 212 table 1-2-1-vseq 16;
#X text 327 34 message for table has to start with 0 \, that is the
index where the insertion of values starts;
#X obj 338 340 route 1-1-1-v 1-1-2-v;
#X obj 338 360 print A;
#X obj 399 360 print B;
#X text 327 58 Use comma to separate messages in a message;
#X text 26 48 ids: Song-Track-Notenum (or Song-Channel-Track);
#X text 327 70 HERE: using the approach from rtc/16step-seq - where
tables sized 16 are filled with [pack]ed messages \, representing velocities
\, which are then read and directly multiplied with audio - because
of this \, the length of the notes in the sequence will be snapped
to 16th durations!;
#X text 328 137 The pitches in track/channel 2 are only up to +/- 2
\; so can represent them with a float (0.2) in the pseq \, and multiply
by 10 to get integer semitone;
#X obj 123 329 r sseqintf0;
#X obj 123 353 route patsequence;
#X obj 36 357 s rseqintf0;
#X msg 36 333 getsequence;
#N canvas 476 67 444 218 setbangmsg 0;
#X obj 45 88 prepend set;
#X msg 18 117;
#X obj 18 38 inlet;
#X obj 18 62 t b a;
#X obj 18 181 outlet;
#X text 141 88 when there's no content \, empty message is set \; but
when empty banged \, there is no output!;
#X connect 0 0 1 0;
#X connect 1 0 4 0;
#X connect 2 0 3 0;
#X connect 3 0 1 0;
#X connect 3 1 0 0;
#X restore 128 492 pd setbangmsg;
#X obj 158 414 print B;
#X obj 123 376 route bang;
#X text 190 370 handle bang (for \; empty sequence) \; separately;
#X text 328 176 NOTE: just velocities alone don't tell us anything
about triggering \, must handle that too!;
#X text 329 201 list-emath - takes two lists and doesn't handle > <
\; list-math - takes one list and scalar \, handles > <;
#X obj 307 1168 list-math >= 2;
#X obj 238 1141 t l l;
#X obj 113 916 cyclone/zl slice 2;
#X text 229 909 split off \; id and index;
#X obj 307 1228 list-math * 2;
#X obj 173 1166 print Orig;
#X obj 377 1320 print Trig;
#X obj 238 1258 list-emath -;
#X obj 251 1282 print Velo;
#X obj 113 1346 cyclone/zl join;
#X obj 144 1369 print Reas;
#X msg 78 990 01v;
#X obj 68 1011 moocow/any2string 128 -1;
#X obj 68 1032 unpack f f f;
#X text 105 990 'v' is 118;
#X obj 159 67 table 1-1-1-tseq 16;
#X obj 159 88 table 1-1-2-tseq 16;
#X obj 159 109 table 1-1-3-tseq 16;
#X obj 159 130 table 1-1-4-tseq 16;
#X obj 159 151 table 1-1-5-tseq 16;
#X obj 159 212 table 1-2-1-tseq 16;
#X text 28 36 tseq: trigger sequence;
#N canvas 517 202 311 166 spigot2 0;
#X obj 27 23 inlet;
#X obj 97 23 inlet;
#X obj 167 23 inlet;
#X obj 27 123 outlet;
#X obj 97 123 outlet;
#X obj 27 83 spigot;
#X obj 97 83 spigot;
#X obj 167 48 t f f;
#X connect 0 0 5 0;
#X connect 1 0 6 0;
#X connect 2 0 7 0;
#X connect 5 0 3 0;
#X connect 6 0 4 0;
#X connect 7 0 5 1;
#X connect 7 1 6 1;
#X restore 163 1105 pd spigot2;
#X obj 177 1066 == 118;
#X obj 113 951 t a a;
#X text 155 942 use the same "01v" \, to \; route both v and t arrays!
;
#X text 277 1132 works only for numeric lists (lists \; without symbols)
\, else use 'a';
#X obj 133 1141 t a a;
#X obj 323 1296 cyclone/zl join;
#X obj 323 1348 route 00v 01v 02v 03v 04v;
#X obj 352 1395 s 1-1-2-tseq;
#X obj 382 1416 s 1-1-3-tseq;
#X obj 411 1437 s 1-1-4-tseq;
#X obj 113 1391 route 00v 01v 02v 03v 04v;
#X obj 142 1438 s 1-1-2-vseq;
#X obj 172 1459 s 1-1-3-vseq;
#X obj 201 1480 s 1-1-4-vseq;
#X obj 467 1380 print rej;
#X msg 433 274 0 1 1 0 1 0 0 1 0 1 0 0 0 0 0 0 0;
#X msg 338 320 1-1-1-v 0 0.1 0.2 0.3 0.4 0.5 0.6 \, 1-1-2-v 7 8 9 10
11 12;
#X obj 333 278 s 1-1-2-vseq;
#X obj 230 1502 s 1-1-5-vseq;
#X obj 440 1458 s 1-1-5-tseq;
#X obj 113 1417 s 1-1-1-vseq;
#X obj 323 1374 s 1-1-1-tseq;
#X obj 407 1198 print num;
#X text 423 1295 the join can be late here!;
#X msg 397 1271 04v 0;
#X obj 321 1271 prepend set;
#X obj 325 1199 t l l;
#X obj 397 1247 t b l;
#X text 89 1239 the join seems \; to work \, even \; without managing
\; of hot/cold bangs!? \; NO \, MUST HANDLE!;
#X msg 190 1322 04v 0;
#X obj 114 1322 prepend set;
#X obj 190 1298 t b l;
#X obj 43 901 print in;
#X text 109 771 seems we might be too fast here \; can use [pipe] to
delay a message \; which doesn't change time between \; consecutive
messages \; or [zexy/drip] which unpacks a list \; into symbols \,
with time between set;
#X text 393 394 the only scripting language included with pd-extended_0.43.4-1
seems to be pdlua;
#X obj 396 492 pdlua;
#X text 392 420 if getting "lua: error loading `hello.lua': canvas_open()
failed" - must add lua path and lib - but that may not be enough: "lua:
can't load library" if lua was compiled wrong - see;
#X obj 426 458 pddp/pddplink http://lists.puredata.info/pipermail/pd-list/2010-02/076010.html
-text [PD] pd lua error;
#X obj 392 471 pddp/pddplink http://lists.puredata.info/pipermail/pd-dev/2008-05/011692.html
-text [PD-dev] [ pure-data-Bugs-1969695 ] pdlua don't load;
#X text 394 512 so if I gave to build \, might as well build pyext
\, which is included in l2ork_git (but not in pd-extended) - that one
needs flext to build \, which is also included in l2ork_git;
#X text 392 552 py/pyext I could build \, but it segfaults \; pdlua
could rebuild from source with a hack - and now it seems it works -
says Hello World from help files! although still can generate canvas_open()
failed ... will need to see;
#X text 110 850 BUT \, none of that really fixes it \; so trying to
solve with script (pdlua);
#X text 393 608 pdluax needs the *.pd_luax file to exist \, and to
have a valid constructor \, else it won't initialize at all!;
#X text 114 435 lua: zomg weasels!x5 (prepend or not) \; cannot handle
quick succession \, so \; gets all 94+ items in one array \; lua.c
forces sym \, flo or pnt;
#X text 110 877 There is [list-drip] - like zexy/drip;
#X text 111 890 [coll] might help - but its complex;
#X obj 98 659 prepend list;
#X obj 25 517 print seqch;
#X obj 28 499 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 47 496 counter;
#X text 94 539 NOTE: even if I get from sseqintf0 directly \; the commas
are still lost in pdlua - prob \; why zpmg comes in 4 times in that
case!;
#X text 103 509 but after setbangmsg \, lists \; come in separate (without
zomg);
#X text 94 578 Yup - without commas (and |) as sep \; no more zomg
\, and | are present in lua!;
#X obj 98 683 pdluax procPatSeq;
#X text 25 481 (debug);
#X text 28 166 try without pseq - instead \, have same tables \; for
track 2 - try to set up polyphony by \; reading from the same table
\, pitched;
#X obj 29 232 table 1-2-2-vseq 16;
#X obj 29 252 table 1-2-3-vseq 16;
#X obj 29 272 table 1-2-4-vseq 16;
#X obj 29 292 table 1-2-5-vseq 16;
#X obj 159 232 table 1-2-2-tseq 16;
#X obj 159 252 table 1-2-3-tseq 16;
#X obj 159 272 table 1-2-4-tseq 16;
#X obj 159 292 table 1-2-5-tseq 16;
#X obj 24 398 r sBtnClr0;
#X obj 24 440 s rseqintf0;
#X msg 24 419 clearpatseq;
#X text 21 381 just bang here;
#N canvas 247 80 855 472 setSeq 0;
#X obj 28 78 r sngnum0;
#X obj 59 215 print sng/pat;
#X obj 93 78 r patnum0;
#X obj 59 187 pack f f f;
#X obj 400 120 list-pak 3;
#X text 397 22 pdlua/examples/list-pak.pd \; all inputs hot - but has
\; problems instantiating at start \; (first have to make object w/
\; path as above which fails - and \; after deleting it \, adding just
\; list-pak works - needs path set);
#X msg 391 387 00v 0 0 0 0 0 2.76 0.76 0.76 0.76 0 0 0 0 0 0 0 0 |
01v 0 0 0 0 2.65 0 0 0 0 0 0 0 0 0 0 0 0 | 02v 0 0 0 2.5 0 0 0 0 0
0 0 0 0 0 0 0 0 | 03v 0 0 2.35 0 0 0 0 0 0 0 0 0 0 0 0 0 0 | 04v 0
2.29 0.29 0.29 0.29 0 0 0 0 0 0 0 0 0 0 0 0 | 10v 0 2.88 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 | 11v 0 0 2.76 0 0 0 0 0 0 0 0 0 0 0 0 0 0 | 12v
0 0 0 2.5 0 0 0 0 0 0 0 0 0 0 0 0 0 | 13v 0 0 0 0 2.41 0 0 0 0 0 0
0 0 0 0 0 0 | 14v 0 0 0 0 0 2.29 0 0 0 0 0 0 0 0 0 0 0;
#X obj 228 529 prepend setpatseq;
#X obj 228 552 s rseqintf0;
#X obj 24 3 pddp/pddplink http://forum.pdpatchrepo.info/topic/8948/controlling-the-order-of-calculation-execution-and-packing-in-pd
-text Controlling the order of calculation execution and packing in
PD?;
#X obj 147 150 expr sngnm0*2+patnm0;
#X obj 68 117 t b b b;
#X obj 27 150 v sngnm0;
#X obj 87 150 v patnm0;
#X text 25 17 NOTE: since here I have to "bang" using s/r \; so as
to update GUI state as well - here \; it is enough just for patnum
to trigger \; (to avoid triggering twice!);
#X msg 381 513 00v 0 2.3 0.3 0.3 0.3 0.3 0.3 0.3 0.3 0 0 0 0 0 0 0
0 | 01v 0 2.1 0.1 2.1 0.1 2.1 0.1 2.1 0.1 2.1 0.1 2.1 0.1 2.1 0.1 2.1
0.1 | 02v 0 0 0 0 0 2.5 0 0 2.1 0 0 0 2.1 2.5 0 0 0 | 03v 0 0 0 0 0
2.75 0.75 0 0 0 2.45 0 0 2.75 0.75 0 0 | 04v 0 2.5 0 0 2.15 0.15 0
0 0 2.5 0.5 0.5 0 0 0 0 0 | 10v 0 0 0 0 0 0 0 0 0 2.2 0.2 0.2 0.2 0.2
0.2 0.2 0.2 | 11v 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 | 12v 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 | 13v 0 2.2 0.2 0.2 0.2 0.2 0.2 0.2 0.2 0.2
0.2 0.2 0.2 0 0 0 0 | 14v 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0;
#X msg 361 790 00v 0 0 0 2.5 0 0 0 0 0 0 0 0 0 0 0 0 0 | 01v 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 | 02v 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
| 03v 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 | 04v 0 2.5 0 0 0 2.5 0 0 0
2.5 0 0 0 2.5 0 0 0;
#X text 847 148 00v 0 0 0 0 2.45 0 2.45 0 0 0 0 2.2 2.45 0 2.45 0 0
| 01v 0 2.2 0 2.2 2.2 2.2 2.2 2.2 0 2.2 0 2.2 0 2.2 0 2.2 0 | 02v 0
0 0 0 0 2.5 0 0 2.1 0 0 0 0 2.5 0 0 0 | 03v 0 0 0 0 0 2.5 0 0 0 0 2.2
0 0 2.5 0 0 0 | 04v 0 2.5 0 0 0 2.5 0 0 0 2.5 0 0 0 2.5 0 0 0 | 10v
0 0 0 0 0 0 0 2.35 0 0 0 0 2.35 0 0 0 2.2 | 11v 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 | 12v 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 | 13v 0 2.2 0.2
0.2 0.2 0.2 0.2 0.2 0.2 0.2 0.2 0.2 0.2 0 0 0 0 | 14v 0 0 0 0 0 0 0
0 0 0 0 0 2.2 0.2 0 0 0;
#X text 849 123 some saves here;
#X obj 230 320 demux 1 2 3 4;
#X text 396 370 Song 2 \, pattern 2;
#X text 389 496 Song 2 \, pattern 1;
#X text 379 636 Song 1 \, pattern 2;
#X text 369 773 Song 1 \, pattern 1;
#X obj 340 147 r sBtnSave0;
#X obj 424 336 demux 1 2 3 4;
#X obj 340 223 s rseqintf0;
#X msg 340 199 getsequence;
#X obj 340 169 t b b;
#X obj 424 222 r rcvpatseq;
#X obj 424 267 spigot;
#X obj 457 246 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X obj 424 291 prepend set;
#X obj 424 314 t a b;
#X msg 371 653 00v 0 0 0 0 2.45 0 2.45 0 0 0 0 2.2 2.45 0 2.45 0 0
| 01v 0 2.2 0 2.2 2.2 2.2 2.2 2.2 0 2.2 0 2.2 0 2.2 0 2.2 0 | 02v 0
0 0 0 0 2.5 0 0 2.1 0 0 0 0 2.5 0 0 0 | 03v 0 0 0 0 0 2.5 0 0 0 0 2.2
0 0 2.5 0 0 0 | 04v 0 2.5 0 0 0 2.5 0 0 0 2.5 0 0 0 2.5 0 0 0 | 10v
0 0 0 0 0 0 0 2.35 0 0 0 0 2.35 0 0 0 2.2 | 11v 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 | 12v 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 | 13v 0 2.2 0.2
0.2 0.2 0.2 0.2 0.2 0.2 0.2 0.2 0.2 0.2 0 0 0 0 | 14v 0 0 0 0 0 0 0
0 0 0 0 0 2.2 0.2 0 0 0;
#X obj 501 200 loadbang;
#X msg 501 221 set 0;
#X obj 230 290 t b f f b;
#X obj 302 290 s clrseqpatchg0;
#X text 303 248 signal to clear \; seq due to pat- \; tern change;
#X obj 475 314 delay 1;
#X connect 2 0 11 0;
#X connect 3 0 1 0;
#X connect 6 0 7 0;
#X connect 7 0 8 0;
#X connect 10 0 3 2;
#X connect 10 0 37 0;
#X connect 11 0 12 0;
#X connect 11 1 13 0;
#X connect 11 2 10 0;
#X connect 12 0 3 0;
#X connect 13 0 3 1;
#X connect 15 0 7 0;
#X connect 16 0 7 0;
#X connect 19 0 16 0;
#X connect 19 1 34 0;
#X connect 19 2 15 0;
#X connect 19 3 6 0;
#X connect 24 0 28 0;
#X connect 25 0 16 0;
#X connect 25 1 34 0;
#X connect 25 2 15 0;
#X connect 25 3 6 0;
#X connect 27 0 26 0;
#X connect 28 0 27 0;
#X connect 28 1 31 0;
#X connect 29 0 30 0;
#X connect 30 0 32 0;
#X connect 31 0 30 1;
#X connect 32 0 33 0;
#X connect 33 0 25 0;
#X connect 33 1 40 0;
#X connect 34 0 7 0;
#X connect 35 0 36 0;
#X connect 36 0 31 0;
#X connect 37 0 19 0;
#X connect 37 1 19 1;
#X connect 37 2 25 1;
#X connect 37 3 38 0;
#X connect 40 0 31 0;
#X restore 243 328 pd setSeq;
#X obj 219 414 print C;
#X obj 98 612 t a a;
#X obj 125 634 s rcvpatseq;
#X obj 208 650 r clrseqpatchg0;
#X connect 12 0 13 0;
#X connect 12 0 69 0;
#X connect 12 1 14 0;
#X connect 19 0 20 0;
#X connect 20 0 25 0;
#X connect 22 0 21 0;
#X connect 25 0 105 1;
#X connect 25 0 23 0;
#X connect 25 1 122 0;
#X connect 29 0 78 0;
#X connect 30 0 36 0;
#X connect 30 1 29 0;
#X connect 31 0 53 0;
#X connect 31 1 51 1;
#X connect 33 0 36 1;
#X connect 36 0 83 0;
#X connect 38 0 39 0;
#X connect 38 0 62 0;
#X connect 40 0 41 0;
#X connect 41 0 42 0;
#X connect 42 2 52 0;
#X connect 51 0 56 0;
#X connect 51 1 30 0;
#X connect 52 0 51 2;
#X connect 53 0 51 0;
#X connect 53 1 41 0;
#X connect 56 0 82 0;
#X connect 56 1 77 0;
#X connect 57 0 35 0;
#X connect 57 0 58 0;
#X connect 58 0 73 0;
#X connect 58 1 59 0;
#X connect 58 2 60 0;
#X connect 58 3 61 0;
#X connect 58 4 71 0;
#X connect 62 0 72 0;
#X connect 62 1 63 0;
#X connect 62 2 64 0;
#X connect 62 3 65 0;
#X connect 62 4 70 0;
#X connect 67 0 69 0;
#X connect 68 0 12 0;
#X connect 76 0 57 0;
#X connect 77 0 76 0;
#X connect 78 0 33 0;
#X connect 78 1 79 0;
#X connect 79 0 76 0;
#X connect 79 1 57 1;
#X connect 81 0 38 0;
#X connect 82 0 81 0;
#X connect 83 0 81 0;
#X connect 83 1 38 1;
#X connect 98 0 105 0;
#X connect 100 0 101 0;
#X connect 101 0 99 0;
#X connect 116 0 118 0;
#X connect 118 0 117 0;
#X connect 122 0 98 0;
#X connect 122 1 123 0;
#X connect 124 0 105 1;
#X restore 15 371 pd AudioSequences;
#X obj 458 65 pddp/dsp;
#X obj 93 457 output~;
#X msg 73 113 show;
#X obj 279 414 t f f;
#X obj 249 461 s curstep;
#X floatatom 299 394 5 0 0 0 - - -;
#N canvas 86 74 938 487 AudioEngineTr1 0;
#X obj 15 388 *~;
#X obj 55 388 vline~;
#X obj 55 286 vline~;
#X obj 15 316 tabread4~ snd1-1-1L;
#X obj 532 9 r curstep;
#X obj 242 76 tabread 1-1-1-vseq;
#X floatatom 522 29 5 0 0 0 - - -;
#X floatatom 202 98 5 0 0 0 - - -;
#X floatatom 352 121 5 0 0 0 - - -;
#X obj 282 99 tabread 1-1-1-tseq;
#X obj 448 9 pddp/dsp;
#X obj 244 269 scope~ 130 130 256 3 100 0 12000 0 0 0 0 102 255 51
135 135 135 0;
#X obj 204 149 s v111;
#X obj 15 59 loadbang;
#X obj 15 103 s vgt;
#X text 44 72 velocity gating \; time [ms];
#X obj 240 107 r vgt;
#X obj 204 128 list append;
#X obj 55 366 r v111;
#X obj 282 127 sel 1;
#X obj 282 149 s t111;
#X obj 42 196 r t111;
#X floatatom 185 217 12 0 0 0 - - -;
#X obj 116 217 r len1-1-1;
#X obj 85 196 r ssz1-1-1;
#X floatatom 154 196 12 0 0 0 - - -;
#N canvas 564 101 428 212 message_test 0;
#X obj 55 191 print;
#X msg 28 48 a asd;
#X obj 79 44 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X msg 212 95 5;
#X msg 172 93 3;
#X obj 146 104 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X text 96 85 bang here !;
#X text 20 10 for a message format like below \, with once set values
\; use pack - and:;
#X msg 184 66 0.4;
#X msg 224 68 0.6;
#X obj 171 129 pack f f f;
#X text 258 64 if we want to keep both \; inputs cold \, then use a
\; pack of three \, don't set \; the first and use \$2 and \; \$3 -
and use first inlet \; only to bang!;
#X text 101 44 don't bang here... (message alone doesn't remember)
;
#X msg 57 165 0 \, \$2 \, 0.123 \$3;
#X connect 1 0 13 0;
#X connect 2 0 13 0;
#X connect 4 0 10 1;
#X connect 5 0 10 0;
#X connect 8 0 10 1;
#X connect 9 0 10 2;
#X connect 10 0 13 0;
#X connect 13 0 0 0;
#X restore 15 31 pd message_test;
#X obj 55 239 pack f f f;
#X text 39 166 just a \; bang;
#X obj 105 336 tabread4~ snd1-1-1R;
#X obj 105 388 *~;
#X obj 145 388 vline~;
#X obj 145 366 r v111;
#X obj 19 210 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X msg 295 224 range 0 12000;
#X msg 244 244 bufsize 100;
#N canvas 151 78 596 442 phasor_vline_reminder 0;
#X floatatom 121 55 12 0 0 0 - - -;
#X obj 64 120 phasor~;
#X obj 65 166 *~;
#X obj 67 287 *~;
#X msg 152 90 0;
#X msg 189 90 0.5;
#X text 73 255 audio is here;
#X text 71 182 this is "position" (index into array) signal;
#X text 115 119 signal only from 0 to 1;
#X text 149 70 skip to start/half of file;
#X obj 71 85 *~;
#X obj 190 288 *~;
#X text 95 309 out Left;
#X text 221 308 out Right;
#X obj 112 34 r len1-1-1;
#X obj 112 145 r ssz1-1-1;
#X obj 66 237 tabread4~ snd1-1-1L;
#X obj 190 237 tabread4~ snd1-1-1R;
#X floatatom 124 166 12 0 0 0 - - -;
#X obj 66 312 nop~;
#X obj 191 312 nop~;
#X text 182 25 here a freq1-1-1 is needed [Hz] \; for phasor~ - not
len1-1-1 [ms]!;
#X text 425 21 and leftovers from vline~ \; reminder here:;
#X obj 425 139 r phase;
#X msg 426 105 \; cutoff 0 5;
#X msg 427 57 \; phase 0 \, 4.41e+08 1e+07 \; cutoff 1;
#X msg 398 178 0 \, \$2 \$3 \, 0 0 \$3;
#X text 395 162 note - with this in vline~:;
#X obj 29 22 nop~ r~ rspd\$1;
#X text 397 193 we go to 0 \, then to \$2 in \$3 \; if we have just
0 0 for the \; third \, it will cancel the \; second - so we must add
third \; argument (0 0 \$3) - as delay \; after which the third setting
\; will be activated -- which is \; the duration of the second \; segment!
Also \, arithmetics \; (\$3+0.1) are not accepter - \; interpreted
as symbols!!!;
#X msg 401 346 0 \, \$2 \$3 \, 0 0 \$3;
#X text 399 359 this actually makes a \; small fast "scratch" at the
\; end - so better w/out the \; third segment (just hold)!;
#X connect 1 0 2 0;
#X connect 3 0 19 0;
#X connect 4 0 1 1;
#X connect 5 0 1 1;
#X connect 10 0 1 0;
#X connect 11 0 20 0;
#X connect 14 0 10 1;
#X connect 14 0 0 0;
#X connect 15 0 2 1;
#X connect 15 0 18 0;
#X connect 28 0 10 0;
#X restore 15 11 pd phasor_vline_reminder;
#X msg 320 244 range 0 1;
#X obj 644 445 outlet~;
#X obj 734 445 outlet~;
#X msg 55 262 0 \, \$2 \$3;
#X msg 15 81 5;
#X obj 440 107 r vgt;
#X obj 404 128 list append;
#X obj 482 127 sel 1;
#X obj 442 76 tabread 1-1-2-vseq;
#X obj 482 99 tabread 1-1-2-tseq;
#X obj 404 149 s v112;
#X obj 482 149 s t112;
#X obj 630 107 r vgt;
#X obj 594 128 list append;
#X obj 672 127 sel 1;
#X obj 632 76 tabread 1-1-3-vseq;
#X obj 672 99 tabread 1-1-3-tseq;
#X obj 672 149 s t113;
#X obj 594 149 s v113;
#X obj 820 107 r vgt;
#X obj 784 128 list append;
#X obj 862 127 sel 1;
#X obj 822 76 tabread 1-1-4-vseq;
#X obj 862 99 tabread 1-1-4-tseq;
#X obj 784 149 s v114;
#X obj 862 149 s t114;
#X obj 1010 107 r vgt;
#X obj 974 128 list append;
#X obj 1052 127 sel 1;
#X obj 1012 76 tabread 1-1-5-vseq;
#X obj 1052 99 tabread 1-1-5-tseq;
#X obj 974 149 s v115;
#X obj 1052 149 s t115;
#X obj 622 42 t f f f f f f f f f f;
#X obj 395 388 *~;
#X obj 435 388 vline~;
#X obj 435 286 vline~;
#X obj 435 239 pack f f f;
#X obj 485 388 *~;
#X obj 525 388 vline~;
#X obj 399 210 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X msg 435 262 0 \, \$2 \$3;
#X obj 465 196 r ssz1-1-2;
#X obj 496 217 r len1-1-2;
#X obj 422 196 r t112;
#X obj 435 366 r v112;
#X obj 525 366 r v112;
#X obj 395 316 tabread4~ snd1-1-2L;
#X obj 485 336 tabread4~ snd1-1-2R;
#X obj 615 388 *~;
#X obj 655 388 vline~;
#X obj 655 286 vline~;
#X obj 655 239 pack f f f;
#X obj 705 388 *~;
#X obj 745 388 vline~;
#X obj 619 210 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X msg 655 262 0 \, \$2 \$3;
#X obj 642 196 r t113;
#X obj 685 196 r ssz1-1-3;
#X obj 716 217 r len1-1-3;
#X obj 615 316 tabread4~ snd1-1-3L;
#X obj 705 336 tabread4~ snd1-1-3R;
#X obj 655 366 r v113;
#X obj 745 366 r v113;
#X obj 835 388 *~;
#X obj 875 388 vline~;
#X obj 875 286 vline~;
#X obj 875 239 pack f f f;
#X obj 925 388 *~;
#X obj 965 388 vline~;
#X obj 839 210 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X msg 875 262 0 \, \$2 \$3;
#X obj 862 196 r t114;
#X obj 905 196 r ssz1-1-4;
#X obj 936 217 r len1-1-4;
#X obj 835 316 tabread4~ snd1-1-4L;
#X obj 925 336 tabread4~ snd1-1-4R;
#X obj 875 366 r v114;
#X obj 965 366 r v114;
#X obj 1055 388 *~;
#X obj 1095 388 vline~;
#X obj 1095 286 vline~;
#X obj 1095 239 pack f f f;
#X obj 1145 388 *~;
#X obj 1185 388 vline~;
#X obj 1059 211 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X msg 1095 262 0 \, \$2 \$3;
#X obj 1082 196 r t115;
#X obj 1125 196 r ssz1-1-5;
#X obj 1157 217 r len1-1-5;
#X obj 1055 316 tabread4~ snd1-1-5L;
#X obj 1145 336 tabread4~ snd1-1-5R;
#X obj 1095 366 r v115;
#X obj 1185 366 r v115;
#X connect 0 0 38 0;
#X connect 1 0 0 1;
#X connect 2 0 3 0;
#X connect 2 0 29 0;
#X connect 2 0 11 0;
#X connect 3 0 0 0;
#X connect 4 0 6 0;
#X connect 4 0 70 0;
#X connect 5 0 7 0;
#X connect 5 0 17 0;
#X connect 9 0 8 0;
#X connect 9 0 19 0;
#X connect 13 0 41 0;
#X connect 16 0 17 1;
#X connect 17 0 12 0;
#X connect 18 0 1 0;
#X connect 19 0 20 0;
#X connect 21 0 27 0;
#X connect 23 0 22 0;
#X connect 23 0 27 2;
#X connect 24 0 25 0;
#X connect 24 0 27 1;
#X connect 27 0 40 0;
#X connect 29 0 30 0;
#X connect 30 0 39 0;
#X connect 31 0 30 1;
#X connect 32 0 31 0;
#X connect 33 0 27 0;
#X connect 34 0 11 0;
#X connect 35 0 11 0;
#X connect 37 0 11 0;
#X connect 40 0 2 0;
#X connect 41 0 14 0;
#X connect 42 0 43 1;
#X connect 43 0 47 0;
#X connect 44 0 48 0;
#X connect 45 0 43 0;
#X connect 46 0 44 0;
#X connect 49 0 50 1;
#X connect 50 0 55 0;
#X connect 51 0 54 0;
#X connect 52 0 50 0;
#X connect 53 0 51 0;
#X connect 56 0 57 1;
#X connect 57 0 61 0;
#X connect 58 0 62 0;
#X connect 59 0 57 0;
#X connect 60 0 58 0;
#X connect 63 0 64 1;
#X connect 64 0 68 0;
#X connect 65 0 69 0;
#X connect 66 0 64 0;
#X connect 67 0 65 0;
#X connect 70 0 5 0;
#X connect 70 1 9 0;
#X connect 70 2 45 0;
#X connect 70 3 46 0;
#X connect 70 4 52 0;
#X connect 70 5 53 0;
#X connect 70 6 59 0;
#X connect 70 7 60 0;
#X connect 70 8 66 0;
#X connect 70 9 67 0;
#X connect 71 0 38 0;
#X connect 72 0 71 1;
#X connect 73 0 84 0;
#X connect 73 0 85 0;
#X connect 74 0 78 0;
#X connect 75 0 39 0;
#X connect 76 0 75 1;
#X connect 77 0 74 0;
#X connect 78 0 73 0;
#X connect 79 0 74 1;
#X connect 80 0 74 2;
#X connect 81 0 74 0;
#X connect 82 0 72 0;
#X connect 83 0 76 0;
#X connect 84 0 71 0;
#X connect 85 0 75 0;
#X connect 86 0 38 0;
#X connect 87 0 86 1;
#X connect 88 0 97 0;
#X connect 88 0 98 0;
#X connect 89 0 93 0;
#X connect 90 0 39 0;
#X connect 91 0 90 1;
#X connect 92 0 89 0;
#X connect 93 0 88 0;
#X connect 94 0 89 0;
#X connect 95 0 89 1;
#X connect 96 0 89 2;
#X connect 97 0 86 0;
#X connect 98 0 90 0;
#X connect 99 0 87 0;
#X connect 100 0 91 0;
#X connect 101 0 38 0;
#X connect 102 0 101 1;
#X connect 103 0 112 0;
#X connect 103 0 113 0;
#X connect 104 0 108 0;
#X connect 105 0 39 0;
#X connect 106 0 105 1;
#X connect 107 0 104 0;
#X connect 108 0 103 0;
#X connect 109 0 104 0;
#X connect 110 0 104 1;
#X connect 111 0 104 2;
#X connect 112 0 101 0;
#X connect 113 0 105 0;
#X connect 114 0 102 0;
#X connect 115 0 106 0;
#X connect 116 0 38 0;
#X connect 117 0 116 1;
#X connect 118 0 127 0;
#X connect 118 0 128 0;
#X connect 119 0 123 0;
#X connect 120 0 39 0;
#X connect 121 0 120 1;
#X connect 122 0 119 0;
#X connect 123 0 118 0;
#X connect 124 0 119 0;
#X connect 125 0 119 1;
#X connect 126 0 119 2;
#X connect 127 0 116 0;
#X connect 128 0 120 0;
#X connect 129 0 117 0;
#X connect 130 0 121 0;
#X restore 15 396 pd AudioEngineTr1;
#N canvas 134 94 938 487 AudioEngineTr2 0;
#X obj 15 478 *~;
#X obj 55 478 vline~;
#X obj 532 9 r curstep;
#X floatatom 522 29 5 0 0 0 - - -;
#X floatatom 202 98 5 0 0 0 - - -;
#X floatatom 352 121 5 0 0 0 - - -;
#X obj 448 9 pddp/dsp;
#X obj 244 339 scope~ 130 130 256 3 100 0 12000 0 0 0 0 102 255 51
135 135 135 0;
#X obj 15 59 loadbang;
#X obj 15 103 s vgt;
#X text 44 72 velocity gating \; time [ms];
#X obj 240 107 r vgt;
#X obj 204 128 list append;
#X obj 282 127 sel 1;
#X floatatom 185 287 12 0 0 0 - - -;
#X floatatom 154 266 12 0 0 0 - - -;
#X obj 55 309 pack f f f;
#X text 39 236 just a \; bang;
#X obj 105 478 *~;
#X obj 145 478 vline~;
#X obj 19 280 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X msg 295 294 range 0 12000;
#X msg 244 314 bufsize 100;
#X msg 320 314 range 0 1;
#X obj 644 535 outlet~;
#X obj 734 535 outlet~;
#X msg 55 332 0 \, \$2 \$3;
#X msg 15 81 5;
#X obj 440 107 r vgt;
#X obj 404 128 list append;
#X obj 482 127 sel 1;
#X obj 630 107 r vgt;
#X obj 594 128 list append;
#X obj 672 127 sel 1;
#X obj 820 107 r vgt;
#X obj 784 128 list append;
#X obj 862 127 sel 1;
#X obj 1010 107 r vgt;
#X obj 974 128 list append;
#X obj 1052 127 sel 1;
#X obj 622 42 t f f f f f f f f f f;
#X obj 395 478 *~;
#X obj 435 478 vline~;
#X obj 435 309 pack f f f;
#X obj 485 478 *~;
#X obj 525 478 vline~;
#X obj 399 280 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X msg 435 332 0 \, \$2 \$3;
#X obj 615 478 *~;
#X obj 655 478 vline~;
#X obj 655 309 pack f f f;
#X obj 705 478 *~;
#X obj 745 478 vline~;
#X obj 619 280 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X msg 655 332 0 \, \$2 \$3;
#X obj 835 478 *~;
#X obj 875 478 vline~;
#X obj 875 309 pack f f f;
#X obj 925 478 *~;
#X obj 965 478 vline~;
#X obj 839 280 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X msg 875 332 0 \, \$2 \$3;
#X obj 1055 478 *~;
#X obj 1095 478 vline~;
#X obj 1095 309 pack f f f;
#X obj 1145 478 *~;
#X obj 1185 478 vline~;
#X obj 1059 281 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X msg 1095 332 0 \, \$2 \$3;
#X obj 242 76 tabread 1-2-1-vseq;
#X obj 282 99 tabread 1-2-1-tseq;
#X obj 204 149 s v121;
#X obj 282 149 s t121;
#X obj 442 76 tabread 1-2-2-vseq;
#X obj 482 99 tabread 1-2-2-tseq;
#X obj 404 149 s v122;
#X obj 482 149 s t122;
#X obj 632 76 tabread 1-2-3-vseq;
#X obj 672 99 tabread 1-2-3-tseq;
#X obj 594 149 s v123;
#X obj 672 149 s t123;
#X obj 822 76 tabread 1-2-4-vseq;
#X obj 784 149 s v124;
#X obj 862 149 s t124;
#X obj 862 99 tabread 1-2-4-tseq;
#X obj 1012 76 tabread 1-2-5-vseq;
#X obj 1052 99 tabread 1-2-5-tseq;
#X obj 974 149 s v125;
#X obj 1052 149 s t125;
#X obj 85 266 r ssz1-2-1;
#X obj 116 287 r len1-2-1;
#X obj 42 266 r t121;
#X obj 422 266 r t122;
#X obj 15 406 tabread4~ snd1-2-1L;
#X obj 105 426 tabread4~ snd1-2-1R;
#X obj 55 456 r v121;
#X obj 145 456 r v121;
#X obj 395 406 tabread4~ snd1-2-1L;
#X obj 485 426 tabread4~ snd1-2-1R;
#X obj 465 266 r ssz1-2-1;
#X obj 496 287 r len1-2-1;
#X obj 642 266 r t123;
#X obj 685 266 r ssz1-2-1;
#X obj 716 287 r len1-2-1;
#X obj 615 406 tabread4~ snd1-2-1L;
#X obj 705 426 tabread4~ snd1-2-1R;
#X obj 655 456 r v123;
#X obj 745 456 r v123;
#X obj 862 266 r t124;
#X obj 875 456 r v124;
#X obj 965 456 r v124;
#X obj 905 266 r ssz1-2-1;
#X obj 936 287 r len1-2-1;
#X obj 835 406 tabread4~ snd1-2-1L;
#X obj 925 426 tabread4~ snd1-2-1R;
#X obj 1082 266 r t125;
#X obj 1125 266 r ssz1-2-1;
#X obj 1157 287 r len1-2-1;
#X obj 1055 406 tabread4~ snd1-2-1L;
#X obj 1145 426 tabread4~ snd1-2-1R;
#X obj 1095 456 r v125;
#X obj 1185 456 r v125;
#X obj 435 456 r v122;
#X obj 525 456 r v122;
#X obj 875 355 vline~;
#X obj 875 376 *~;
#X obj 1095 356 vline~;
#X obj 1095 376 *~;
#X obj 655 376 vline~;
#X obj 435 356 vline~;
#X obj 435 376 *~;
#X obj 55 356 vline~;
#X obj 55 376 *~;
#X obj 426 211 expr pow(2 \, (-2./12));
#X obj 426 234 s t2fm2;
#X obj 626 178 t b b b b;
#X obj 566 178 loadbang;
#X obj 566 211 expr pow(2 \, (-1./12));
#X obj 706 211 expr pow(2 \, (1./12));
#X obj 706 234 s t2fp1;
#X obj 836 234 s t2fp2;
#X obj 836 211 expr pow(2 \, (2./12));
#X obj 566 234 s t2fm1;
#X obj 111 347 r t2fp2;
#X obj 501 347 r t2fp1;
#X obj 941 347 r t2fm1;
#X obj 1161 347 r t2fm2;
#X connect 0 0 24 0;
#X connect 1 0 0 1;
#X connect 2 0 3 0;
#X connect 2 0 40 0;
#X connect 11 0 12 1;
#X connect 12 0 71 0;
#X connect 13 0 72 0;
#X connect 16 0 26 0;
#X connect 18 0 25 0;
#X connect 19 0 18 1;
#X connect 20 0 16 0;
#X connect 21 0 7 0;
#X connect 22 0 7 0;
#X connect 23 0 7 0;
#X connect 26 0 131 0;
#X connect 27 0 9 0;
#X connect 28 0 29 1;
#X connect 29 0 75 0;
#X connect 30 0 76 0;
#X connect 31 0 32 1;
#X connect 32 0 79 0;
#X connect 33 0 80 0;
#X connect 34 0 35 1;
#X connect 35 0 82 0;
#X connect 36 0 83 0;
#X connect 37 0 38 1;
#X connect 38 0 87 0;
#X connect 39 0 88 0;
#X connect 40 0 69 0;
#X connect 40 1 70 0;
#X connect 40 2 73 0;
#X connect 40 3 74 0;
#X connect 40 4 77 0;
#X connect 40 5 78 0;
#X connect 40 6 81 0;
#X connect 40 7 84 0;
#X connect 40 8 85 0;
#X connect 40 9 86 0;
#X connect 41 0 24 0;
#X connect 42 0 41 1;
#X connect 43 0 47 0;
#X connect 44 0 25 0;
#X connect 45 0 44 1;
#X connect 46 0 43 0;
#X connect 47 0 129 0;
#X connect 48 0 24 0;
#X connect 49 0 48 1;
#X connect 50 0 54 0;
#X connect 51 0 25 0;
#X connect 52 0 51 1;
#X connect 53 0 50 0;
#X connect 54 0 128 0;
#X connect 55 0 24 0;
#X connect 56 0 55 1;
#X connect 57 0 61 0;
#X connect 58 0 25 0;
#X connect 59 0 58 1;
#X connect 60 0 57 0;
#X connect 61 0 124 0;
#X connect 62 0 24 0;
#X connect 63 0 62 1;
#X connect 64 0 68 0;
#X connect 65 0 25 0;
#X connect 66 0 65 1;
#X connect 67 0 64 0;
#X connect 68 0 126 0;
#X connect 69 0 4 0;
#X connect 69 0 12 0;
#X connect 70 0 5 0;
#X connect 70 0 13 0;
#X connect 73 0 29 0;
#X connect 74 0 30 0;
#X connect 77 0 32 0;
#X connect 78 0 33 0;
#X connect 81 0 35 0;
#X connect 84 0 36 0;
#X connect 85 0 38 0;
#X connect 86 0 39 0;
#X connect 89 0 15 0;
#X connect 89 0 16 1;
#X connect 90 0 14 0;
#X connect 90 0 16 2;
#X connect 91 0 16 0;
#X connect 92 0 43 0;
#X connect 93 0 0 0;
#X connect 94 0 18 0;
#X connect 95 0 1 0;
#X connect 96 0 19 0;
#X connect 97 0 41 0;
#X connect 98 0 44 0;
#X connect 99 0 43 1;
#X connect 100 0 43 2;
#X connect 101 0 50 0;
#X connect 102 0 50 1;
#X connect 103 0 50 2;
#X connect 104 0 48 0;
#X connect 105 0 51 0;
#X connect 106 0 49 0;
#X connect 107 0 52 0;
#X connect 108 0 57 0;
#X connect 109 0 56 0;
#X connect 110 0 59 0;
#X connect 111 0 57 1;
#X connect 112 0 57 2;
#X connect 113 0 55 0;
#X connect 114 0 58 0;
#X connect 115 0 64 0;
#X connect 116 0 64 1;
#X connect 117 0 64 2;
#X connect 118 0 62 0;
#X connect 119 0 65 0;
#X connect 120 0 63 0;
#X connect 121 0 66 0;
#X connect 122 0 42 0;
#X connect 123 0 45 0;
#X connect 124 0 125 0;
#X connect 125 0 113 0;
#X connect 125 0 114 0;
#X connect 126 0 127 0;
#X connect 127 0 118 0;
#X connect 127 0 119 0;
#X connect 128 0 104 0;
#X connect 128 0 105 0;
#X connect 129 0 130 0;
#X connect 130 0 97 0;
#X connect 130 0 98 0;
#X connect 131 0 132 0;
#X connect 132 0 7 0;
#X connect 132 0 93 0;
#X connect 132 0 94 0;
#X connect 133 0 134 0;
#X connect 135 0 133 0;
#X connect 135 1 137 0;
#X connect 135 2 138 0;
#X connect 135 3 141 0;
#X connect 136 0 135 0;
#X connect 137 0 142 0;
#X connect 138 0 139 0;
#X connect 141 0 140 0;
#X connect 143 0 132 1;
#X connect 144 0 130 1;
#X connect 145 0 125 1;
#X connect 146 0 127 1;
#X restore 128 396 pd AudioEngineTr2;
#N canvas 32 98 884 429 mixer 0;
#X obj 12 116 inlet~;
#X text 60 114 in 1Left;
#X obj 132 116 inlet~;
#X text 180 114 in 1Right;
#X obj 294 116 inlet~;
#X obj 414 116 inlet~;
#X text 342 114 in 2Left;
#X text 462 115 in 2Right;
#X obj 162 286 outlet~;
#X text 212 284 out Left;
#X obj 282 286 outlet~;
#X text 332 284 out Right;
#X floatatom 698 303 5 0 0 0 - - -;
#X floatatom 780 303 5 0 0 0 - - -;
#X text 37 59 just init vals;
#X msg 205 19 95;
#X obj 698 325 / 100;
#X obj 780 325 / 100;
#X obj 54 199 *~;
#X obj 178 199 *~;
#X obj 284 199 *~;
#X obj 408 199 *~;
#X obj 162 248 +~;
#X obj 281 248 +~;
#X obj 245 -5 r sqinitbang0;
#X obj 219 44 s rsqvoltr10;
#X obj 137 44 s rsqvoltr00;
#X obj 40 45 s itr00;
#X obj 87 45 s itr10;
#X obj 780 238 r ssqvoltr10;
#X obj 698 238 r ssqvoltr00;
#X obj 790 261 r itr10;
#X obj 708 261 r itr00;
#X obj 698 347 s sqtr00f;
#X obj 780 347 s sqtr10f;
#X obj 69 175 r sqtr00f;
#X obj 193 175 r sqtr00f;
#X obj 299 175 r sqtr10f;
#X obj 424 175 r sqtr10f;
#X connect 0 0 18 0;
#X connect 2 0 19 0;
#X connect 4 0 20 0;
#X connect 5 0 21 0;
#X connect 12 0 16 0;
#X connect 13 0 17 0;
#X connect 15 0 25 0;
#X connect 15 0 26 0;
#X connect 15 0 27 0;
#X connect 15 0 28 0;
#X connect 16 0 33 0;
#X connect 17 0 34 0;
#X connect 18 0 22 0;
#X connect 19 0 23 0;
#X connect 20 0 22 1;
#X connect 21 0 23 1;
#X connect 22 0 8 0;
#X connect 23 0 10 0;
#X connect 24 0 15 0;
#X connect 29 0 13 0;
#X connect 30 0 12 0;
#X connect 31 0 13 0;
#X connect 32 0 12 0;
#X connect 35 0 18 1;
#X connect 36 0 19 1;
#X connect 37 0 20 1;
#X connect 38 0 21 1;
#X restore 99 429 pd mixer;
#X text 11 18 CAREFUL when saving the gripd \; multiline text hack
requires Tr1/r/nf/r/na/r/nd/r/ne/r/nr (with backslashes)- but it gets
turned to actual multiline when saving \, messing up the .gpd file
format! So if saving it - make sure to manually replace those "vertical"
texts!;
#X connect 0 0 2 0;
#X connect 0 0 25 0;
#X connect 1 0 0 0;
#X connect 4 0 3 0;
#X connect 6 0 9 0;
#X connect 7 0 5 0;
#X connect 9 0 18 0;
#X connect 11 0 15 0;
#X connect 12 0 13 0;
#X connect 12 1 14 0;
#X connect 13 0 6 0;
#X connect 14 0 6 0;
#X connect 15 0 12 0;
#X connect 16 0 9 1;
#X connect 17 0 20 0;
#X connect 17 0 19 0;
#X connect 18 0 37 0;
#X connect 18 0 35 0;
#X connect 19 0 18 0;
#X connect 25 0 30 0;
#X connect 28 0 24 0;
#X connect 30 0 27 0;
#X connect 34 0 2 1;
#X connect 35 0 36 0;
#X connect 35 1 4 0;
#X connect 38 0 40 0;
#X connect 38 1 40 1;
#X connect 39 0 40 2;
#X connect 39 1 40 3;
#X connect 40 0 33 0;
#X connect 40 1 33 1;
