#N canvas 109 109 762 433 10;
#X text 18 20 instantiate as [.. deck-id d-id+1]:;
#X text 18 10 "backbuffer" (rendered) sequencer engine (w bbuf tables)
;
#X text 18 30 [ttsq_backbufSeqEng_py 0 1];
#X obj 21 67 r rseqintf\$1;
#X text 106 61 this receives latest sSq1pat1\$1 etc \; sent from ttsq_uiSetSngPatSeq
;
#X obj 21 89 route setpatseq;
#X text 120 88 clean up prepended symbol;
#X obj 261 387 print backbuf;
#X text 511 326 sample size of \; full loop @BPM;
#X obj 315 356 prepend list;
#X msg 137 316 help;
#X msg 136 336 doc;
#X msg 172 337 doc+;
#X msg 177 316 reload;
#X msg 165 292 detach 0;
#X msg 225 292 detach 1;
#X msg 287 292 detach 2;
#X floatatom 215 450 5 0 0 0 - - -;
#X text 224 451 ____current buffer \; (last one rendered);
#X obj 412 24 inlet;
#X obj 453 25 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 1
1;
#X text 555 37 DSP in this subwindow is turned on and off by the [switch~]
object. Any subwindows of this window can also be switched off here.
If a patch and a superpatch both have switches \, both must be "on"
for DSP to run in the patch.;
#X obj 507 47 switch~;
#X text 473 23 enable this sequencer engine?;
#X obj 412 47 s bsqEnabled\$1;
#X floatatom 527 240 12 0 0 0 - - -;
#X text 553 194 [msecs];
#X obj 474 217 expr 16*$f1*44100/1000;
#X obj 474 245 t f f;
#X text 603 233 sample size of \; full loop @BPM;
#X obj 474 195 r n16thDur\$1;
#X obj 527 262 s loopsampleSize\$1;
#X obj 398 337 r loopsampleSize\$1;
#X obj 191 884 outlet~;
#X obj 247 884 outlet~;
#X obj 478 904 outlet~;
#X obj 534 904 outlet~;
#X obj 194 590 expr 44100 / $f1;
#X floatatom 228 612 12 0 0 0 - - -;
#X obj 192 674 phasor~;
#X obj 193 715 *~;
#X msg 280 644 0;
#X msg 317 644 0.5;
#X text 149 865 audio is here;
#X text 139 731 this is "position" (index into array) signal;
#X text 243 673 signal only from 0 to 1;
#X text 277 627 skip to start/half of file;
#X obj 199 632 *~;
#X text 33 536 from audiolooper_s:;
#X obj 430 370 r bsqEnabled\$1;
#X obj 177 566 r~ trspd\$1;
#X obj 228 695 r loopsampleSize\$1;
#X obj 313 608 r phri\$1;
#X text 62 882 Track 1 (stereo) out;
#X text 583 903 Track 2 (stereo) out;
#X text 26 757 ids (all 1-based): \; Deck-Track-BackbufferNum;
#X obj 502 674 phasor~;
#X obj 503 715 *~;
#X msg 590 644 0;
#X msg 627 644 0.5;
#X text 449 731 this is "position" (index into array) signal;
#X text 553 673 signal only from 0 to 1;
#X text 587 627 skip to start/half of file;
#X obj 487 566 r~ trspd\$1;
#X obj 538 695 r loopsampleSize\$1;
#X obj 624 611 r phri\$1;
#X obj 429 743 bang;
#X obj 419 713 bang;
#X obj 412 548 sel 1 0;
#X obj 122 847 tabread4~ bbuf-\$2-1-1L;
#X obj 266 847 tabread4~ bbuf-\$2-1-1R;
#X obj 432 847 tabread4~ bbuf-\$2-2-1L;
#X obj 576 847 tabread4~ bbuf-\$2-2-1R;
#X obj 144 827 prepend set;
#X obj 279 827 prepend set;
#X obj 449 827 prepend set;
#X obj 589 827 prepend set;
#X obj 48 632 scope~ 130 130 256 3 128 0 1 0 0 0 0 102 255 51 135 135
135 0;
#X msg 64 603 range 0 1;
#X obj 180 768 prepend bbuf-\$2-1-2L;
#X obj 161 805 prepend bbuf-\$2-1-1L;
#X obj 315 768 prepend bbuf-\$2-1-2R;
#X obj 296 805 prepend bbuf-\$2-1-1R;
#X obj 485 768 prepend bbuf-\$2-2-2L;
#X obj 466 805 prepend bbuf-\$2-2-1L;
#X obj 625 768 prepend bbuf-\$2-2-2R;
#X obj 606 805 prepend bbuf-\$2-2-1R;
#X text 385 520 when 1 is here \, we use \; 1-1-2L else 1-1-1L etc...
;
#X obj 41 836 print L;
#X text 390 438 response \; of script;
#X obj 215 425 pyext seqaudiorender SAR \$1 @detach 0;
#X text 449 403 well \, turns out now the script \; for resize via
rightmost inlet \; cannot work with detach > 0!!!;
#X obj 151 187 r clrseqpatchg\$1;
#X obj 24 223 spigot;
#X obj 136 167 r emptpatseq\$1;
#X obj 24 162 r rcvpatseq\$1;
#X obj 161 247 spigot;
#X text 27 132 rcvpatseq now in [ttsq_uiSetSngPatSeq];
#X text 21 119 not anymore above - now like in classic:;
#X obj 33 202 r bsqEnabled\$1;
#X obj 170 226 r bsqEnabled\$1;
#X text 224 148 handle bang (for \; empty sequence) \; separately;
#N canvas 497 210 304 153 spigot3 0;
#X obj 37 28 inlet;
#X obj 107 28 inlet;
#X obj 237 28 inlet;
#X obj 37 68 spigot;
#X obj 107 68 spigot;
#X obj 37 108 outlet;
#X obj 107 108 outlet;
#X obj 167 28 inlet;
#X obj 167 68 spigot;
#X obj 167 108 outlet;
#X connect 0 0 3 0;
#X connect 1 0 4 0;
#X connect 2 0 4 1;
#X connect 2 0 3 1;
#X connect 2 0 8 1;
#X connect 3 0 5 0;
#X connect 4 0 6 0;
#X connect 7 0 8 0;
#X connect 8 0 9 0;
#X restore 358 382 pd spigot3;
#X obj 675 282 r rwavsvc\$1;
#X obj 675 334 fromsymbol;
#X obj 675 356 unpack s s s f s s s s;
#X obj 675 381 pack s s s f s s s;
#X obj 675 457 soundfiler;
#X floatatom 675 481 8 0 0 0 - - -;
#X obj 675 530 symbol;
#X obj 675 554 prepend rwav;
#X obj 675 506 bang;
#X obj 797 465 print sfO1;
#X obj 675 405 tosymbol;
#X obj 738 404 fromsymbol;
#X obj 755 426 t a a;
#X obj 698 580 s;
#X text 724 578 send to symbol set above;
#X text 252 187 we do NOT want clrseq here - it was \; needed for classic
to erase the \; tables at each change - but here we \; rerender - so
we don't want it to \; mess out curbuf count!!!!;
#X text 791 421 [t a a] just to properly \; control printouts \; (when/if
needed);
#X text 675 265 here \, a: write -wave ... message:;
#X text 728 479 (unfortunately \, the printout \; "d0-t1-bb0.wav: biggest
amplitude = 0.776273" \; from [soundfiler] cannot be avoided);
#X obj 675 310 spigot;
#X obj 744 308 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X text 765 295 seems to cause quite some chops \; so enable if needed
;
#X connect 3 0 5 0;
#X connect 9 0 102 0;
#X connect 10 0 90 0;
#X connect 11 0 90 0;
#X connect 12 0 90 0;
#X connect 13 0 90 0;
#X connect 14 0 90 0;
#X connect 15 0 90 0;
#X connect 16 0 90 0;
#X connect 17 0 68 0;
#X connect 19 0 20 0;
#X connect 20 0 22 0;
#X connect 20 0 24 0;
#X connect 25 0 31 0;
#X connect 27 0 28 0;
#X connect 28 1 25 0;
#X connect 30 0 27 0;
#X connect 32 0 102 1;
#X connect 37 0 38 0;
#X connect 38 0 47 1;
#X connect 39 0 40 0;
#X connect 40 0 69 0;
#X connect 40 0 70 0;
#X connect 41 0 39 1;
#X connect 42 0 39 1;
#X connect 49 0 102 3;
#X connect 50 0 39 0;
#X connect 51 0 40 1;
#X connect 52 0 39 1;
#X connect 56 0 57 0;
#X connect 57 0 71 0;
#X connect 57 0 72 0;
#X connect 58 0 56 1;
#X connect 59 0 56 1;
#X connect 63 0 56 0;
#X connect 64 0 57 1;
#X connect 65 0 56 1;
#X connect 66 0 80 0;
#X connect 66 0 82 0;
#X connect 66 0 84 0;
#X connect 66 0 86 0;
#X connect 67 0 79 0;
#X connect 67 0 81 0;
#X connect 67 0 83 0;
#X connect 67 0 85 0;
#X connect 68 0 67 0;
#X connect 68 1 66 0;
#X connect 69 0 33 0;
#X connect 69 0 77 0;
#X connect 70 0 34 0;
#X connect 71 0 35 0;
#X connect 72 0 36 0;
#X connect 73 0 69 0;
#X connect 74 0 70 0;
#X connect 75 0 71 0;
#X connect 76 0 72 0;
#X connect 78 0 77 0;
#X connect 79 0 73 0;
#X connect 80 0 73 0;
#X connect 81 0 74 0;
#X connect 82 0 74 0;
#X connect 83 0 75 0;
#X connect 84 0 75 0;
#X connect 85 0 76 0;
#X connect 86 0 76 0;
#X connect 90 0 17 0;
#X connect 93 0 9 0;
#X connect 94 0 96 0;
#X connect 95 0 93 0;
#X connect 96 0 102 2;
#X connect 99 0 93 1;
#X connect 100 0 96 1;
#X connect 102 0 90 1;
#X connect 102 1 90 2;
#X connect 102 2 90 3;
#X connect 103 0 122 0;
#X connect 104 0 105 0;
#X connect 105 0 106 0;
#X connect 105 1 106 1;
#X connect 105 2 106 2;
#X connect 105 3 106 3;
#X connect 105 4 106 4;
#X connect 105 4 109 1;
#X connect 105 5 106 5;
#X connect 105 6 106 6;
#X connect 105 7 116 1;
#X connect 106 0 113 0;
#X connect 107 0 108 0;
#X connect 108 0 111 0;
#X connect 109 0 110 0;
#X connect 110 0 116 0;
#X connect 111 0 109 0;
#X connect 113 0 114 0;
#X connect 114 0 115 0;
#X connect 115 0 107 0;
#X connect 122 0 104 0;
#X connect 123 0 122 1;
