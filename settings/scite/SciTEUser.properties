# quick for local:
# command.go.*.sh=bash $(FilePath)
#~ command.go.*.*
# nope:
#command.shortcut.go.*=Ctrl+Space
# go with user shortcuts to IDM_GO? doesn't work, even if this:
#~ user.shortcuts=\
#~ F12|IDM_COMPILE|\
#~ Ctrl+F12|IDM_BUILD|\
#~ Shift+F12|IDM_GO|\
#~ Alt+F12|IDM_STOPEXECUTE|\
# listed in https://gitorious.org/context/context/source/79f4f6dcc36ebeec36914f7dbcbf35f0f7a8fcae:context/data/scite/scite-context.properties


# for spice netlist ??
# Import all the language specific properties files
# apparently, this doesn't work here - only in global!
# also must add the 'Language' entry from global (or repeat whole thing here)
# also must add .net extension directly in /usr/share/scite/spice.properties - only then does 'Language' entry work !!
# AND enabled below!
import spice
# must be in global ?! apparently... no effect here ?! But enabled in global, syntax color works..
import verilog
import vhdl
import markdown

ext.lua.auto.reload=1
default.file.ext=*

# Internationalisation
# Unicode
code.page=65001
# Required for Unicode to work on GTK+:
LC_CTYPE=en_US.UTF-8
if PLAT_GTK
	output.code.page=65001

# Strips /delete trailing white spaces from the file while saveing.
# (but, also strips indendts from python files. )
strip.trailing.spaces=1

# Wrapping of long lines
wrap=1
save.recent=1
# one instance of SciTE only
check.if.already.open=1
# prompt me for any suspicous action
are.you.sure.on.reload=1
# reload file and prompt on activation(useful if file is modified by an external program)
load.on.activate=1
# Sizes and visibility in edit pane - line.numbers has been replaced with two properties
line.margin.visible=1
line.margin.width=3+

# Column guide, indicates long lines
# (this is what they call margin line in gedit)
edge.mode=1
edge.column=80

# associate the .tikz file extension with the tex syntax color lexer
lexer.*.tikz=tex

# additional makefile words? no work either way
#~ keywords.$(file.patterns.make)=$(keywordclass.make) define endef
keywordclass.makefile=$(keywordclass.makefile) define endef
keywords.$(file.patterns.make)=$(keywordclass.makefile)
# print($(file.patterns.make)) # print no work, see below
print("Hello world")

# Indentation - usually 4 4 1; for vhdl/v: 2 2 0
tabsize=2
indent.size=2
use.tabs=0

# width height at start
position.width=700
position.height=550

# selection colors - too low - going from 30 to 60
if PLAT_WINNT
	selection.alpha=32
	selection.back=#000000
if PLAT_GTK
	selection.alpha=60
	selection.back=#000000
selection.multiple=1
selection.additional.fore=#0000AA
selection.additional.back=#880000
selection.additional.alpha=60
# note - multiple doesn't work when clicking on whole row (then it selects whole text)
# Alt taken over by Gnome,
# "Rectangular block selection.	Alt+Shift+Movement"
# "Rectangular blocks of text can be selected in SciTE by holding down the Alt key on Windows or the Ctrl key on GTK+ while dragging the mouse over the text. The modifier key used on GTK+ can be changed with the rectangular.selection.modifier property. "
# "Valid options are 2 (Ctrl), 4 (Alt) or 8 (Super). "
rectangular.selection.modifier=8

# for xml files
comment.stream.start.xml=<!--
comment.stream.end.xml=-->

# User defined key commands
user.shortcuts=\
Ctrl+Shift+V|IDM_PASTEANDDOWN|\
Ctrl+J|IDM_JOIN|\
Ctrl+K|IDM_SPLIT|\
Ctrl+PageUp|IDM_PREVFILE|\
Ctrl+PageDown|IDM_NEXTFILE|\


# customization...
#ext.lua.startup.script=$(SciteUserHome)/sciteLuaFunctions.lua
ext.lua.startup.script=/home/administrator/sciteLuaFunctions.lua

command.name.12.*=Copy Filename
command.12.*=CopyPath
command.subsystem.12.*=3
command.mode.12.*=savebefore:no
command.shortcut.12.*=Ctrl+Alt+C

command.name.13.*=MoveLineDown
command.13.*=MoveLineDown
command.subsystem.13.*=3
command.mode.13.*=savebefore:no
command.shortcut.13.*=Ctrl+Shift+Down

command.name.14.*=MoveLineUp
command.14.*=MoveLineUp
command.subsystem.14.*=3
command.mode.14.*=savebefore:no
command.shortcut.14.*=Ctrl+Shift+Up

command.name.15.*=CleanTexEquations
command.15.*=CleanTexEquations
command.subsystem.15.*=3
command.mode.15.*=savebefore:no
command.shortcut.15.*=Ctrl+1

command.name.16.*=SpaceTexEquations
command.16.*=SpaceTexEquations
command.subsystem.16.*=3
command.mode.16.*=savebefore:no
command.shortcut.16.*=Ctrl+2

command.name.17.*=SelAppendEOF
command.17.*=SelAppendEOF
command.subsystem.17.*=3
command.mode.17.*=savebefore:no
command.shortcut.17.*=Ctrl+Shift+A

-- hex editor
ext.lua.reset=0
command.name.18.*=Hex Editor
command.18.*=HexEditor
command.subsystem.18.*=3
command.save.before.18.*=2

command.name.19.*=mvs cnr
command.19.*=MvsCnr
command.subsystem.19.*=3
# command.save.before.19.*=2

command.name.20.*=TerminalHere
command.20.*=TerminalHere
command.subsystem.20.*=3

command.name.21.*=SelAppendClipboard
command.21.*=SelAppendClipboard
command.subsystem.21.*=3
command.mode.21.*=savebefore:no
command.shortcut.21.*=Ctrl+Shift+C

command.name.22.*=InsertCodeTag
command.22.*=InsertCodeTag
command.subsystem.22.*=3
command.mode.22.*=savebefore:no
command.shortcut.22.*=Ctrl+Alt+X

command.name.23.*=InsertQpTag
command.23.*=InsertQpTag
command.subsystem.23.*=3
command.mode.23.*=savebefore:no
command.shortcut.23.*=Ctrl+Alt+Q

command.name.24.*=pdflatex
command.24.*=PdfLatex
command.subsystem.24.*=3
#~ command.save.before.24.*=2
command.mode.24.*=savebefore:yes
command.shortcut.24.*=Ctrl+T

command.name.25.*=Email Quote Indent
command.25.*=EQuotePlusOne
command.subsystem.25.*=3
#~ command.save.before.25.*=2
command.mode.25.*=savebefore:no
command.shortcut.25.*=Ctrl+0

command.name.26.*=Email Quote Unindent
command.26.*=EQuoteMinusOne
command.subsystem.26.*=3
#~ command.save.before.26.*=2
command.mode.26.*=savebefore:no
command.shortcut.26.*=Ctrl+9

command.name.27.*=Wcalc Selection
command.27.*=WcalcSel
command.subsystem.27.*=3
#~ command.save.before.27.*=2
command.mode.27.*=savebefore:no
command.shortcut.27.*=Ctrl+Alt+W

command.name.28.*=C comment
command.28.*=CQuote
command.subsystem.28.*=3
#~ command.save.before.28.*=2
command.mode.28.*=savebefore:no
command.shortcut.28.*=Ctrl+Shift+G

command.name.29.*=Exec Text Sel in Terminal
command.29.*=ExecSelText
command.subsystem.29.*=3
#~ command.save.before.29.*=2
command.mode.29.*=savebefore:no
command.shortcut.29.*=Ctrl+E

command.name.30.*=Insert Date
command.30.*=InsertDate
command.subsystem.30.*=3
#~ command.save.before.30.*=2
command.mode.30.*=savebefore:no
command.shortcut.30.*=Alt+D

command.name.31.*=Word Count
command.31.*=WordCount
command.subsystem.31.*=3
#~ command.save.before.31.*=2
command.mode.31.*=savebefore:no
command.shortcut.31.*=Alt+D

command.name.32.*=Print Props
command.32.*=PrintProps
command.subsystem.32.*=3
#~ command.save.before.32.*=2
command.mode.32.*=savebefore:no
#~ command.shortcut.32.*=Alt+D

command.name.33.*=PasteJoinSave
command.33.*=PasteJoinSave
command.subsystem.33.*=3
#~ command.save.before.33.*=2
command.mode.33.*=savebefore:no
#~ command.shortcut.33.*=Alt+D

command.name.34.*=CleanTags
command.34.*=CleanTags
command.subsystem.34.*=3
#~ command.save.before.34.*=2
command.mode.34.*=savebefore:no
command.shortcut.34.*=F7

command.name.35.*=CleanTemp
command.35.*=CleanTemp
command.subsystem.35.*=3
#~ command.save.before.35.*=2
command.mode.35.*=savebefore:no
command.shortcut.35.*=F8

#~ ext.lua.reset=0
command.name.36.*=Toggle Line Breaking
command.36.*=LineBreaker
command.subsystem.36.*=3
command.save.before.36.*=2
command.shortcut.36.*=Ctrl+Alt+B

command.name.37.*=Inline Spellcheck
command.37.*=inline_aspell $(FilePath)
command.subsystem.37.*=3
command.mode.37.*=savebefore:yes

command.name.38.*=Delete ~ tilde
command.38.*=DelTilde
command.subsystem.38.*=3
command.save.before.38.*=2
command.shortcut.38.*=Ctrl+`

command.name.49.*=Delete Comments
command.mode.49.*=subsystem:lua,savebefore:yes
command.is.filter.49.*.au3=0
command.49.*=CommentsDelete
#command.shortcut.49.*.au3=Ctrl+Shift+L

# 48 Hide Comments
command.name.48.*=Hide Comments
command.mode.48.*=subsystem:lua,savebefore:yes
command.is.filter.48.*.au3=0
command.48.*=CommentsHide
#command.shortcut.48.*.au3=Ctrl+Shift+H

# repeating this, just to invert what is first choice:
open.filter=\
$(all.files)\
All Source|$(source.files)|\
$(filter.ada)\
$(filter.conf)\
$(filter.asm)\
$(filter.asn1)\
$(filter.ave)\
$(filter.baan)\
$(filter.bash)\
$(filter.caml)\
$(filter.cmake)\
$(filter.cpp)\
#$(filter.ch)\
$(filter.css)\
$(filter.d)\
$(filter.eiffel)\
$(filter.erlang)\
$(filter.fortran)\
$(filter.gap)\
$(filter.idl)\
$(filter.inno)\
$(filter.java)\
$(filter.js)\
$(filter.kix)\
$(filter.lout)\
$(filter.lua)\
$(filter.matlab)\
$(filter.markdown)\
$(filter.metapost)\
$(filter.mmixal)\
$(filter.nncrontab)\
$(filter.nsis)\
$(filter.opal)\
$(filter.pascal)\
$(filter.perl)\
$(filter.php)\
$(filter.pov)\
$(filter.powershell)\
$(filter.prg)\
$(filter.properties)\
$(filter.ps)\
$(filter.python)\
$(filter.r)\
$(filter.ruby)\
$(filter.sql)\
$(filter.spice)\
$(filter.specman)\
$(filter.tcl)\
$(filter.tex)\
$(filter.text)\
$(filter.vb)\
$(filter.web)\
$(filter.yaml)\
$(filter.verilog)\
$(filter.vhdl)


#  How do I use a fixed width font for all text?
# Use these properties:

font.base=$(font.monospace)
font.small=$(font.monospace)
font.text=$(font.monospace)
font.embedded.base=$(font.monospace)
font.vbs=$(font.monospace)
# comments - monospace for .vhd/.v
font.comment=$(font.monospace)
font.text.comment=$(font.monospace)
font.embedded.comment=$(font.monospace)

# 2.22
toolbar.visible=1
toolbar.detachable=1
statusbar.visible=1

menu.language=\
#FreeBasic|bas||\
Text|txt|Shift+F11|\
Ada|ads||\
#Apache Confi&g|conf||\
Assembler|asm||\
#ASN.1|asn1||\
#Avenue|ave||\
#Baan|bc||\
&Batch|bat||\
#Bullant|ant||\
&C / C++|c||\
#CMake|cmake||\
C&#|cs||\
#COBOL|cob||\
#Csound|orc||\
CSS|css||\
D|d||\
&Difference|diff||\
#&Eiffel|e||\
#Erlang|erl||\
&Errorlist|err||\
#FlagShip|prg||\
#Forth|forth||\
&Fortran|f90||\
#Gap|g||\
H&ypertext|html|F12|\
#&InnoSetup|iss||\
&Java|java||\
Java&Script|js||\
#&Kix|kix||\
$(lexer.lpeg.menuitem)\
Lisp|lisp||\
#Lot|lot||\
#Lout|lt||\
Lu&a|lua||\
Markdown|md||\
Matlab|m.matlab||\
&Makefile|mak|Ctrl+Shift+F11|\
#MetaPost|mp||\
#MMIXAL|mms||\
#&nnCron crontab|tab||\
#NSIS|nsis||\
#Objective Caml|ml||\
#Octave|m.octave||\
#Opal|impl||\
Pascal|pas||\
Pe&rl|pl||\
P&HP|php||\
#P&LSQL|spec||\
#P&ostScript|ps||\
#P&OV-Ray SDL|pov||\
#PowerShell|ps1||\
#PowerPro|powerpro||\
&Properties|properties||\
Pytho&n|py||\
#R|R||\
#Reso&urce|rc||\
Ruby|rb||\
Shell|sh||\
S&QL|sql||\
Spice|net||\
#Specman|e||\
&TCL|tcl||\
TeX|tex||\
#&txt2tags|t2t||\
&VB|vb||\
VBScr&ipt|vbs||\
Verilog|v||\
VHDL|vhd||\
&XML|xml|Shift+F12|\
YAML|yaml||

# for adding additional file extensions:
# (i.e. default for spice is .net - additionally we want .cir)
# use the "lexer" syntax - menu.language above accepts only default file extension!
# ([http://resource.dopus.com/viewtopic.php?f=12&t=992&start=20 Directory Opus Resource Centre • View topic - SourceCodeViewer 2.0 Beta Available ... uses SciTE configs])
lexer.*.cir=spice
lexer.*.cirlib=spice
lexer.*.pde=cpp
lexer.*.ino=cpp
