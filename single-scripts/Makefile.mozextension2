## file: Makefile.mozextension2
## based on http://kb.mozillazine.org/Makefile_for_packaging_an_extension
## "This Makefile.mozextention is for the test extension"
## the original Makefile.mozextention reconstructs http://kb.mozillazine.org/Getting_started_with_extension_development

# call with:
# make -f Makefile.mozextension2 make_structure
## (without args for 'all')

# note: @echo silent; without @ the command is written in stdout

PROJECT=test

PROJECT_NAME=TestWorld

#~ PROJECT_ID={XXXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX}
PROJECT_ID=test@TestWorld.ext
PROJECT_VERSION=1.0
PROJECT_DESC="A $(PROJECT_NAME) project with advanced features"
PROJECT_AUTHOR=Author Name


# MKDIR=$(shell which mkdir)
MKDIR=/bin/mkdir
ZIPPROG=/usr/bin/zip
SHELL = /bin/sh
NOOP = $(SHELL) -c true
NOECHO = @
RM_RF=rm -f
CP=/bin/cp -i


.PHONY: all


all ::  make_structure make_files
	$(NOECHO) $(NOOP)

package:: make_xpi
	$(NOECHO) $(NOOP)

#install :: make_xpi make_install
#	$(NOECHO) $(NOOP)

clean :: make_clean
	$(NOECHO) $(NOOP)

make_structure:
	@$(MKDIR) $(PROJECT) || { echo "creating directory failed; it probably exists. Either remove (clean it), or choose individual targets to build."; exit 1; }
	@echo $(MKDIR) $(PROJECT)
	$(MKDIR) $(PROJECT)/content $(PROJECT)/locale $(PROJECT)/locale/en-us $(PROJECT)/components/ $(PROJECT)/defaults/ $(PROJECT)/defaults/preferences/ $(PROJECT)/locale/de-de $(PROJECT)/skin

make_xpi:
	$(MKDIR) $(PROJECT)/chrome && \
	cd $(PROJECT) && \
	$(ZIPPROG)  -r  chrome/$(PROJECT).jar content locale skin && \
	$(ZIPPROG)  -r  $(PROJECT).xpi chrome.manifest install.rdf components defaults chrome && cd ..


make_files: chrome.manifest install.rdf overlay.xul overlay.js overlay.dtd
	$(NOECHO) $(NOOP)

make_clean:
	rm -rf $(PROJECT)

# this may be a bit too old ?! Keeping it anyway..
real_install:
	$(CP) chrome/$(PROJECT).jar ~/.mozilla/default/32p27fdr.slt/chrome/



####################################

######
define CHROME_MANIFEST
content	$(PROJECT) content/
overlay	chrome://browser/content/browser.xul 	chrome://$(PROJECT)/content/overlay.xul

locale	$(PROJECT)	en-US	locale/en-US/
skin	$(PROJECT)	classic/1.0	skin/
style	chrome://global/content/customizeToolbar.xul	chrome://$(PROJECT)/skin/overlay.css

endef
export CHROME_MANIFEST

chrome.manifest:
	@echo Generating $(PROJECT)/chrome.manifest
	@echo "$$CHROME_MANIFEST" > $(PROJECT)/chrome.manifest


######
#Firefox 	{ec8030f7-c20a-464f-9b0e-13a3a9e97384}
#Thunderbird 	{3550f703-e582-4d05-9a08-453d09bdfdc6}
#Nvu 	{136c295a-4a5a-41cf-bf24-5cee526720d5}
#Mozilla Suite 	{86c18b42-e466-45a9-ae7a-9b95ba6f5640}
#SeaMonkey 	{92650c4d-4b8e-4d2a-b7eb-24ecf4f6b63a}
#Sunbird 	{718e30fb-e89b-41dd-9da7-e25a45638b28}
#Netscape Browser	{3db10fab-e461-4c80-8b97-957ad5f8ea47}
######
define INSTALL_RDF
<?xml version="1.0"?>
<RDF xmlns="http://www.w3.org/1999/02/22-rdf-syntax-ns#"     xmlns:em="http://www.mozilla.org/2004/em-rdf#">

<Description about="urn:mozilla:install-manifest">

<em:id>$(PROJECT_ID)</em:id>
<em:name>$(PROJECT_NAME)</em:name>
<em:version>$(PROJECT_VERSION)</em:version>
<em:description>$(PROJECT_DESC)</em:description>
<em:creator>$(PROJECT_AUTHOR)</em:creator>
<!-- optional items -->
<em:contributor>Here is a place for you who helped me</em:contributor>
<!-- <em:contributor>Another one</em:contributor> -->
<em:homepageURL>http://$(PROJECT).mozdev.org/</em:homepageURL>
<em:optionsURL>chrome://$(PROJECT)/content/settings.xul</em:optionsURL>
<em:aboutURL>chrome://$(PROJECT)/content/about.xul</em:aboutURL>
<em:iconURL>chrome://$(PROJECT)/skin/mainicon.png</em:iconURL>
<em:updateURL>http://$(PROJECT).mozdev.org/update.rdf</em:updateURL>
<em:type>2</em:type> <!-- type=extension -->

      <!-- Firefox -->
<em:targetApplication>
  <Description>
    <em:id>{ec8030f7-c20a-464f-9b0e-13a3a9e97384}</em:id>
    <em:minVersion>2.0</em:minVersion>
    <em:maxVersion>9.0</em:maxVersion>
  </Description>
</em:targetApplication>

</Description>
</RDF>
endef
export INSTALL_RDF

install.rdf:
	@echo Generating $(PROJECT)/install.rdf
	@echo "$$INSTALL_RDF" > $(PROJECT)/install.rdf


######
define OVERLAY_XUL
<?xml version="1.0"?>
<?xml-stylesheet href="chrome://$(PROJECT)/skin/overlay.css" type="text/css"?>
<!DOCTYPE overlay SYSTEM "chrome://$(PROJECT)/locale/overlay.dtd">
<overlay id="$(PROJECT)-overlay"       xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul">
<script src="overlay.js"/>

	<menupopup id="menu_ToolsPopup">
		<menuitem id="$(PROJECT)-extention" label="&$(PROJECT);"
      oncommand="$(PROJECT).onMenuItemCommand(event);"/>
	</menupopup>
</overlay>

endef
export OVERLAY_XUL

overlay.xul:
	@echo Generating $(PROJECT)/content/overlay.xul
	@echo "$$OVERLAY_XUL" > $(PROJECT)/content/overlay.xul


######
define OVERLAY_JS
var $(PROJECT_NAME) = {
  onLoad: function() {
    // initialization code
    this.initialized = true;
  },

  onMenuItemCommand: function() {
    if(this.initialized)
      alert("Hi!");
  }
};

window.addEventListener("load", function(e) { $(PROJECT_NAME).onLoad(e); }, false);
endef
export OVERLAY_JS

overlay.js:
	@echo Generating $(PROJECT)/content/overlay.js
	@echo "$$OVERLAY_JS" > $(PROJECT)/content/overlay.js


######
define OVERLAY_DTD

<!ENTITY $(PROJECT) "$(PROJECT_NAME)">

endef
export OVERLAY_DTD

overlay.dtd:
	@echo Generating $(PROJECT)/locale/en-us/overlay.dtd
	@echo "$$OVERLAY_DTD" > $(PROJECT)/locale/en-us/overlay.dtd



####################################

